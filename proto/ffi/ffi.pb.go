// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.3
// source: ffi.proto

package ffi

import (
	api "github.com/bloXroute-Labs/solana-trader-proto/proto/api"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type JupiterSwapMode int32

const (
	JupiterSwapMode_JSM_EXACT_IN  JupiterSwapMode = 0
	JupiterSwapMode_JSM_EXACT_OUT JupiterSwapMode = 1
)

// Enum value maps for JupiterSwapMode.
var (
	JupiterSwapMode_name = map[int32]string{
		0: "JSM_EXACT_IN",
		1: "JSM_EXACT_OUT",
	}
	JupiterSwapMode_value = map[string]int32{
		"JSM_EXACT_IN":  0,
		"JSM_EXACT_OUT": 1,
	}
)

func (x JupiterSwapMode) Enum() *JupiterSwapMode {
	p := new(JupiterSwapMode)
	*p = x
	return p
}

func (x JupiterSwapMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (JupiterSwapMode) Descriptor() protoreflect.EnumDescriptor {
	return file_ffi_proto_enumTypes[0].Descriptor()
}

func (JupiterSwapMode) Type() protoreflect.EnumType {
	return &file_ffi_proto_enumTypes[0]
}

func (x JupiterSwapMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use JupiterSwapMode.Descriptor instead.
func (JupiterSwapMode) EnumDescriptor() ([]byte, []int) {
	return file_ffi_proto_rawDescGZIP(), []int{0}
}

type SolanaAccountsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountIDs []string `protobuf:"bytes,1,rep,name=accountIDs,proto3" json:"accountIDs,omitempty"`
}

func (x *SolanaAccountsRequest) Reset() {
	*x = SolanaAccountsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffi_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SolanaAccountsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SolanaAccountsRequest) ProtoMessage() {}

func (x *SolanaAccountsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ffi_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SolanaAccountsRequest.ProtoReflect.Descriptor instead.
func (*SolanaAccountsRequest) Descriptor() ([]byte, []int) {
	return file_ffi_proto_rawDescGZIP(), []int{0}
}

func (x *SolanaAccountsRequest) GetAccountIDs() []string {
	if x != nil {
		return x.AccountIDs
	}
	return nil
}

type SolanaAccountsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// accounts can be null if not found: in that case, check to see if owner field is set
	Accounts []*SolanaAccount `protobuf:"bytes,1,rep,name=accounts,proto3" json:"accounts,omitempty"`
	// empty if in response to a request, filled if unsolicited push
	AccountIDs []string `protobuf:"bytes,2,rep,name=accountIDs,proto3" json:"accountIDs,omitempty"`
	// signal for errors processing response
	Error string `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *SolanaAccountsResponse) Reset() {
	*x = SolanaAccountsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffi_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SolanaAccountsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SolanaAccountsResponse) ProtoMessage() {}

func (x *SolanaAccountsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ffi_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SolanaAccountsResponse.ProtoReflect.Descriptor instead.
func (*SolanaAccountsResponse) Descriptor() ([]byte, []int) {
	return file_ffi_proto_rawDescGZIP(), []int{1}
}

func (x *SolanaAccountsResponse) GetAccounts() []*SolanaAccount {
	if x != nil {
		return x.Accounts
	}
	return nil
}

func (x *SolanaAccountsResponse) GetAccountIDs() []string {
	if x != nil {
		return x.AccountIDs
	}
	return nil
}

func (x *SolanaAccountsResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type SolanaAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lamports   uint64 `protobuf:"varint,1,opt,name=lamports,proto3" json:"lamports,omitempty"`
	Owner      []byte `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
	Data       string `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Executable bool   `protobuf:"varint,4,opt,name=executable,proto3" json:"executable,omitempty"`
	RentEpoch  uint64 `protobuf:"varint,5,opt,name=rentEpoch,proto3" json:"rentEpoch,omitempty"`
}

func (x *SolanaAccount) Reset() {
	*x = SolanaAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffi_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SolanaAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SolanaAccount) ProtoMessage() {}

func (x *SolanaAccount) ProtoReflect() protoreflect.Message {
	mi := &file_ffi_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SolanaAccount.ProtoReflect.Descriptor instead.
func (*SolanaAccount) Descriptor() ([]byte, []int) {
	return file_ffi_proto_rawDescGZIP(), []int{2}
}

func (x *SolanaAccount) GetLamports() uint64 {
	if x != nil {
		return x.Lamports
	}
	return 0
}

func (x *SolanaAccount) GetOwner() []byte {
	if x != nil {
		return x.Owner
	}
	return nil
}

func (x *SolanaAccount) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *SolanaAccount) GetExecutable() bool {
	if x != nil {
		return x.Executable
	}
	return false
}

func (x *SolanaAccount) GetRentEpoch() uint64 {
	if x != nil {
		return x.RentEpoch
	}
	return 0
}

type JupiterPairToAccountsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InputMint  string `protobuf:"bytes,1,opt,name=inputMint,proto3" json:"inputMint,omitempty"`
	OutputMint string `protobuf:"bytes,2,opt,name=outputMint,proto3" json:"outputMint,omitempty"`
}

func (x *JupiterPairToAccountsRequest) Reset() {
	*x = JupiterPairToAccountsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffi_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JupiterPairToAccountsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JupiterPairToAccountsRequest) ProtoMessage() {}

func (x *JupiterPairToAccountsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ffi_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JupiterPairToAccountsRequest.ProtoReflect.Descriptor instead.
func (*JupiterPairToAccountsRequest) Descriptor() ([]byte, []int) {
	return file_ffi_proto_rawDescGZIP(), []int{3}
}

func (x *JupiterPairToAccountsRequest) GetInputMint() string {
	if x != nil {
		return x.InputMint
	}
	return ""
}

func (x *JupiterPairToAccountsRequest) GetOutputMint() string {
	if x != nil {
		return x.OutputMint
	}
	return ""
}

type JupiterPairToAccountsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountIDs []string `protobuf:"bytes,2,rep,name=accountIDs,proto3" json:"accountIDs,omitempty"`
}

func (x *JupiterPairToAccountsResponse) Reset() {
	*x = JupiterPairToAccountsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffi_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JupiterPairToAccountsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JupiterPairToAccountsResponse) ProtoMessage() {}

func (x *JupiterPairToAccountsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ffi_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JupiterPairToAccountsResponse.ProtoReflect.Descriptor instead.
func (*JupiterPairToAccountsResponse) Descriptor() ([]byte, []int) {
	return file_ffi_proto_rawDescGZIP(), []int{4}
}

func (x *JupiterPairToAccountsResponse) GetAccountIDs() []string {
	if x != nil {
		return x.AccountIDs
	}
	return nil
}

type JupiterIsReadyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *JupiterIsReadyRequest) Reset() {
	*x = JupiterIsReadyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffi_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JupiterIsReadyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JupiterIsReadyRequest) ProtoMessage() {}

func (x *JupiterIsReadyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ffi_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JupiterIsReadyRequest.ProtoReflect.Descriptor instead.
func (*JupiterIsReadyRequest) Descriptor() ([]byte, []int) {
	return file_ffi_proto_rawDescGZIP(), []int{5}
}

type JupiterIsReadyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ready      bool     `protobuf:"varint,1,opt,name=ready,proto3" json:"ready,omitempty"`
	AccountIDs []string `protobuf:"bytes,2,rep,name=accountIDs,proto3" json:"accountIDs,omitempty"`
}

func (x *JupiterIsReadyResponse) Reset() {
	*x = JupiterIsReadyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffi_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JupiterIsReadyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JupiterIsReadyResponse) ProtoMessage() {}

func (x *JupiterIsReadyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ffi_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JupiterIsReadyResponse.ProtoReflect.Descriptor instead.
func (*JupiterIsReadyResponse) Descriptor() ([]byte, []int) {
	return file_ffi_proto_rawDescGZIP(), []int{6}
}

func (x *JupiterIsReadyResponse) GetReady() bool {
	if x != nil {
		return x.Ready
	}
	return false
}

func (x *JupiterIsReadyResponse) GetAccountIDs() []string {
	if x != nil {
		return x.AccountIDs
	}
	return nil
}

type JupiterComputeRoutesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InputMint  string  `protobuf:"bytes,1,opt,name=inputMint,proto3" json:"inputMint,omitempty"`
	OutputMint string  `protobuf:"bytes,2,opt,name=outputMint,proto3" json:"outputMint,omitempty"`
	Amount     uint64  `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"` // https://github.com/protocolbuffers/protobuf/issues/3666#issuecomment-330794708 maybe a problem?
	Slippage   float64 `protobuf:"fixed64,4,opt,name=slippage,proto3" json:"slippage,omitempty"`
}

func (x *JupiterComputeRoutesRequest) Reset() {
	*x = JupiterComputeRoutesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffi_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JupiterComputeRoutesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JupiterComputeRoutesRequest) ProtoMessage() {}

func (x *JupiterComputeRoutesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ffi_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JupiterComputeRoutesRequest.ProtoReflect.Descriptor instead.
func (*JupiterComputeRoutesRequest) Descriptor() ([]byte, []int) {
	return file_ffi_proto_rawDescGZIP(), []int{7}
}

func (x *JupiterComputeRoutesRequest) GetInputMint() string {
	if x != nil {
		return x.InputMint
	}
	return ""
}

func (x *JupiterComputeRoutesRequest) GetOutputMint() string {
	if x != nil {
		return x.OutputMint
	}
	return ""
}

func (x *JupiterComputeRoutesRequest) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *JupiterComputeRoutesRequest) GetSlippage() float64 {
	if x != nil {
		return x.Slippage
	}
	return 0
}

type JupiterComputeRoutesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RouteInfos []*JupiterRouteInfo `protobuf:"bytes,1,rep,name=routeInfos,proto3" json:"routeInfos,omitempty"`
}

func (x *JupiterComputeRoutesResponse) Reset() {
	*x = JupiterComputeRoutesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffi_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JupiterComputeRoutesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JupiterComputeRoutesResponse) ProtoMessage() {}

func (x *JupiterComputeRoutesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ffi_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JupiterComputeRoutesResponse.ProtoReflect.Descriptor instead.
func (*JupiterComputeRoutesResponse) Descriptor() ([]byte, []int) {
	return file_ffi_proto_rawDescGZIP(), []int{8}
}

func (x *JupiterComputeRoutesResponse) GetRouteInfos() []*JupiterRouteInfo {
	if x != nil {
		return x.RouteInfos
	}
	return nil
}

type JupiterSwapTxRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Steps                []*JupiterMarketInfo    `protobuf:"bytes,1,rep,name=steps,proto3" json:"steps,omitempty"`
	InAmount             float32                 `protobuf:"fixed32,2,opt,name=inAmount,proto3" json:"inAmount,omitempty"`
	OutAmount            float32                 `protobuf:"fixed32,3,opt,name=outAmount,proto3" json:"outAmount,omitempty"`
	Amount               float32                 `protobuf:"fixed32,4,opt,name=amount,proto3" json:"amount,omitempty"`
	OtherAmountThreshold float32                 `protobuf:"fixed32,5,opt,name=otherAmountThreshold,proto3" json:"otherAmountThreshold,omitempty"`
	SwapMode             JupiterSwapMode         `protobuf:"varint,6,opt,name=swapMode,proto3,enum=ffi.JupiterSwapMode" json:"swapMode,omitempty"`
	PriceImpactPercent   *api.PriceImpactPercent `protobuf:"bytes,7,opt,name=priceImpactPercent,proto3" json:"priceImpactPercent,omitempty"`
	UserPublicKey        string                  `protobuf:"bytes,8,opt,name=userPublicKey,proto3" json:"userPublicKey,omitempty"`
}

func (x *JupiterSwapTxRequest) Reset() {
	*x = JupiterSwapTxRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffi_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JupiterSwapTxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JupiterSwapTxRequest) ProtoMessage() {}

func (x *JupiterSwapTxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ffi_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JupiterSwapTxRequest.ProtoReflect.Descriptor instead.
func (*JupiterSwapTxRequest) Descriptor() ([]byte, []int) {
	return file_ffi_proto_rawDescGZIP(), []int{9}
}

func (x *JupiterSwapTxRequest) GetSteps() []*JupiterMarketInfo {
	if x != nil {
		return x.Steps
	}
	return nil
}

func (x *JupiterSwapTxRequest) GetInAmount() float32 {
	if x != nil {
		return x.InAmount
	}
	return 0
}

func (x *JupiterSwapTxRequest) GetOutAmount() float32 {
	if x != nil {
		return x.OutAmount
	}
	return 0
}

func (x *JupiterSwapTxRequest) GetAmount() float32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *JupiterSwapTxRequest) GetOtherAmountThreshold() float32 {
	if x != nil {
		return x.OtherAmountThreshold
	}
	return 0
}

func (x *JupiterSwapTxRequest) GetSwapMode() JupiterSwapMode {
	if x != nil {
		return x.SwapMode
	}
	return JupiterSwapMode_JSM_EXACT_IN
}

func (x *JupiterSwapTxRequest) GetPriceImpactPercent() *api.PriceImpactPercent {
	if x != nil {
		return x.PriceImpactPercent
	}
	return nil
}

func (x *JupiterSwapTxRequest) GetUserPublicKey() string {
	if x != nil {
		return x.UserPublicKey
	}
	return ""
}

type JupiterSwapTxResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transactions []*TransactionMessage `protobuf:"bytes,1,rep,name=transactions,proto3" json:"transactions,omitempty"`
}

func (x *JupiterSwapTxResponse) Reset() {
	*x = JupiterSwapTxResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffi_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JupiterSwapTxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JupiterSwapTxResponse) ProtoMessage() {}

func (x *JupiterSwapTxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ffi_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JupiterSwapTxResponse.ProtoReflect.Descriptor instead.
func (*JupiterSwapTxResponse) Descriptor() ([]byte, []int) {
	return file_ffi_proto_rawDescGZIP(), []int{10}
}

func (x *JupiterSwapTxResponse) GetTransactions() []*TransactionMessage {
	if x != nil {
		return x.Transactions
	}
	return nil
}

// FFI version of a TransactionMessage so that the transaction in bytes does not prematurely become an api.TransactionMessage (string)
// before it has to turn into an amm.TransactionMessage (bytes)
type TransactionMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content   []byte `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	IsCleanup bool   `protobuf:"varint,2,opt,name=isCleanup,proto3" json:"isCleanup,omitempty"`
}

func (x *TransactionMessage) Reset() {
	*x = TransactionMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffi_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionMessage) ProtoMessage() {}

func (x *TransactionMessage) ProtoReflect() protoreflect.Message {
	mi := &file_ffi_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionMessage.ProtoReflect.Descriptor instead.
func (*TransactionMessage) Descriptor() ([]byte, []int) {
	return file_ffi_proto_rawDescGZIP(), []int{11}
}

func (x *TransactionMessage) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *TransactionMessage) GetIsCleanup() bool {
	if x != nil {
		return x.IsCleanup
	}
	return false
}

type JupiterRouteInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MarketInfos          []*JupiterMarketInfo    `protobuf:"bytes,1,rep,name=marketInfos,proto3" json:"marketInfos,omitempty"`
	InAmount             float32                 `protobuf:"fixed32,2,opt,name=inAmount,proto3" json:"inAmount,omitempty"`
	OutAmount            float32                 `protobuf:"fixed32,3,opt,name=outAmount,proto3" json:"outAmount,omitempty"`
	Amount               float32                 `protobuf:"fixed32,4,opt,name=amount,proto3" json:"amount,omitempty"`
	OtherAmountThreshold float32                 `protobuf:"fixed32,5,opt,name=otherAmountThreshold,proto3" json:"otherAmountThreshold,omitempty"`
	SwapMode             JupiterSwapMode         `protobuf:"varint,6,opt,name=swapMode,proto3,enum=ffi.JupiterSwapMode" json:"swapMode,omitempty"`
	PriceImpactPercent   *api.PriceImpactPercent `protobuf:"bytes,7,opt,name=priceImpactPercent,proto3" json:"priceImpactPercent,omitempty"`
}

func (x *JupiterRouteInfo) Reset() {
	*x = JupiterRouteInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffi_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JupiterRouteInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JupiterRouteInfo) ProtoMessage() {}

func (x *JupiterRouteInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ffi_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JupiterRouteInfo.ProtoReflect.Descriptor instead.
func (*JupiterRouteInfo) Descriptor() ([]byte, []int) {
	return file_ffi_proto_rawDescGZIP(), []int{12}
}

func (x *JupiterRouteInfo) GetMarketInfos() []*JupiterMarketInfo {
	if x != nil {
		return x.MarketInfos
	}
	return nil
}

func (x *JupiterRouteInfo) GetInAmount() float32 {
	if x != nil {
		return x.InAmount
	}
	return 0
}

func (x *JupiterRouteInfo) GetOutAmount() float32 {
	if x != nil {
		return x.OutAmount
	}
	return 0
}

func (x *JupiterRouteInfo) GetAmount() float32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *JupiterRouteInfo) GetOtherAmountThreshold() float32 {
	if x != nil {
		return x.OtherAmountThreshold
	}
	return 0
}

func (x *JupiterRouteInfo) GetSwapMode() JupiterSwapMode {
	if x != nil {
		return x.SwapMode
	}
	return JupiterSwapMode_JSM_EXACT_IN
}

func (x *JupiterRouteInfo) GetPriceImpactPercent() *api.PriceImpactPercent {
	if x != nil {
		return x.PriceImpactPercent
	}
	return nil
}

type JupiterMarketInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amm                *JupiterAmm             `protobuf:"bytes,1,opt,name=amm,proto3" json:"amm,omitempty"`
	InputMint          string                  `protobuf:"bytes,2,opt,name=inputMint,proto3" json:"inputMint,omitempty"`
	OutputMint         string                  `protobuf:"bytes,3,opt,name=outputMint,proto3" json:"outputMint,omitempty"`
	InAmount           float32                 `protobuf:"fixed32,4,opt,name=inAmount,proto3" json:"inAmount,omitempty"`
	OutAmount          float32                 `protobuf:"fixed32,5,opt,name=outAmount,proto3" json:"outAmount,omitempty"`
	PriceImpactPercent *api.PriceImpactPercent `protobuf:"bytes,6,opt,name=priceImpactPercent,proto3" json:"priceImpactPercent,omitempty"`
	LiquidityPoolFee   *api.Fee                `protobuf:"bytes,7,opt,name=liquidityPoolFee,proto3" json:"liquidityPoolFee,omitempty"`
	PlatformFee        *api.Fee                `protobuf:"bytes,8,opt,name=platformFee,proto3" json:"platformFee,omitempty"`
	NotEnoughLiquidity bool                    `protobuf:"varint,9,opt,name=notEnoughLiquidity,proto3" json:"notEnoughLiquidity,omitempty"`
}

func (x *JupiterMarketInfo) Reset() {
	*x = JupiterMarketInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffi_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JupiterMarketInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JupiterMarketInfo) ProtoMessage() {}

func (x *JupiterMarketInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ffi_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JupiterMarketInfo.ProtoReflect.Descriptor instead.
func (*JupiterMarketInfo) Descriptor() ([]byte, []int) {
	return file_ffi_proto_rawDescGZIP(), []int{13}
}

func (x *JupiterMarketInfo) GetAmm() *JupiterAmm {
	if x != nil {
		return x.Amm
	}
	return nil
}

func (x *JupiterMarketInfo) GetInputMint() string {
	if x != nil {
		return x.InputMint
	}
	return ""
}

func (x *JupiterMarketInfo) GetOutputMint() string {
	if x != nil {
		return x.OutputMint
	}
	return ""
}

func (x *JupiterMarketInfo) GetInAmount() float32 {
	if x != nil {
		return x.InAmount
	}
	return 0
}

func (x *JupiterMarketInfo) GetOutAmount() float32 {
	if x != nil {
		return x.OutAmount
	}
	return 0
}

func (x *JupiterMarketInfo) GetPriceImpactPercent() *api.PriceImpactPercent {
	if x != nil {
		return x.PriceImpactPercent
	}
	return nil
}

func (x *JupiterMarketInfo) GetLiquidityPoolFee() *api.Fee {
	if x != nil {
		return x.LiquidityPoolFee
	}
	return nil
}

func (x *JupiterMarketInfo) GetPlatformFee() *api.Fee {
	if x != nil {
		return x.PlatformFee
	}
	return nil
}

func (x *JupiterMarketInfo) GetNotEnoughLiquidity() bool {
	if x != nil {
		return x.NotEnoughLiquidity
	}
	return false
}

type JupiterAmm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Label string `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	Id    string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *JupiterAmm) Reset() {
	*x = JupiterAmm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffi_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JupiterAmm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JupiterAmm) ProtoMessage() {}

func (x *JupiterAmm) ProtoReflect() protoreflect.Message {
	mi := &file_ffi_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JupiterAmm.ProtoReflect.Descriptor instead.
func (*JupiterAmm) Descriptor() ([]byte, []int) {
	return file_ffi_proto_rawDescGZIP(), []int{14}
}

func (x *JupiterAmm) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *JupiterAmm) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_ffi_proto protoreflect.FileDescriptor

var file_ffi_proto_rawDesc = []byte{
	0x0a, 0x09, 0x66, 0x66, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x66, 0x66, 0x69,
	0x1a, 0x09, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x37, 0x0a, 0x15, 0x53,
	0x6f, 0x6c, 0x61, 0x6e, 0x61, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x44, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x44, 0x73, 0x22, 0x7e, 0x0a, 0x16, 0x53, 0x6f, 0x6c, 0x61, 0x6e, 0x61, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e,
	0x0a, 0x08, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x66, 0x66, 0x69, 0x2e, 0x53, 0x6f, 0x6c, 0x61, 0x6e, 0x61, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x08, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x1e,
	0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x22, 0x93, 0x01, 0x0a, 0x0d, 0x53, 0x6f, 0x6c, 0x61, 0x6e, 0x61, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6d, 0x70, 0x6f, 0x72,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6c, 0x61, 0x6d, 0x70, 0x6f, 0x72,
	0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1e, 0x0a, 0x0a,
	0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x72, 0x65, 0x6e, 0x74, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x09, 0x72, 0x65, 0x6e, 0x74, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x22, 0x5c, 0x0a, 0x1c, 0x4a, 0x75,
	0x70, 0x69, 0x74, 0x65, 0x72, 0x50, 0x61, 0x69, 0x72, 0x54, 0x6f, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e,
	0x70, 0x75, 0x74, 0x4d, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69,
	0x6e, 0x70, 0x75, 0x74, 0x4d, 0x69, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x4d, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x4d, 0x69, 0x6e, 0x74, 0x22, 0x3f, 0x0a, 0x1d, 0x4a, 0x75, 0x70, 0x69,
	0x74, 0x65, 0x72, 0x50, 0x61, 0x69, 0x72, 0x54, 0x6f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x73, 0x22, 0x17, 0x0a, 0x15, 0x4a, 0x75, 0x70,
	0x69, 0x74, 0x65, 0x72, 0x49, 0x73, 0x52, 0x65, 0x61, 0x64, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x4e, 0x0a, 0x16, 0x4a, 0x75, 0x70, 0x69, 0x74, 0x65, 0x72, 0x49, 0x73, 0x52,
	0x65, 0x61, 0x64, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x72, 0x65, 0x61, 0x64, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x72, 0x65, 0x61,
	0x64, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x44, 0x73, 0x22, 0x8f, 0x01, 0x0a, 0x1b, 0x4a, 0x75, 0x70, 0x69, 0x74, 0x65, 0x72, 0x43, 0x6f,
	0x6d, 0x70, 0x75, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x4d, 0x69, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x4d, 0x69, 0x6e, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x4d, 0x69, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x4d, 0x69, 0x6e, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x6c, 0x69, 0x70,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x73, 0x6c, 0x69, 0x70,
	0x70, 0x61, 0x67, 0x65, 0x22, 0x55, 0x0a, 0x1c, 0x4a, 0x75, 0x70, 0x69, 0x74, 0x65, 0x72, 0x43,
	0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x0a, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x66, 0x66, 0x69, 0x2e, 0x4a,
	0x75, 0x70, 0x69, 0x74, 0x65, 0x72, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x0a, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0xeb, 0x02, 0x0a, 0x14,
	0x4a, 0x75, 0x70, 0x69, 0x74, 0x65, 0x72, 0x53, 0x77, 0x61, 0x70, 0x54, 0x78, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x05, 0x73, 0x74, 0x65, 0x70, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x66, 0x66, 0x69, 0x2e, 0x4a, 0x75, 0x70, 0x69, 0x74, 0x65,
	0x72, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x73, 0x74, 0x65,
	0x70, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x69, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x6f, 0x75, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x09, 0x6f, 0x75, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x14, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x14, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x54,
	0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x30, 0x0a, 0x08, 0x73, 0x77, 0x61, 0x70,
	0x4d, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x66, 0x66, 0x69,
	0x2e, 0x4a, 0x75, 0x70, 0x69, 0x74, 0x65, 0x72, 0x53, 0x77, 0x61, 0x70, 0x4d, 0x6f, 0x64, 0x65,
	0x52, 0x08, 0x73, 0x77, 0x61, 0x70, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x47, 0x0a, 0x12, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x49, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x49, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x52,
	0x12, 0x70, 0x72, 0x69, 0x63, 0x65, 0x49, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x50, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x4b, 0x65, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x75, 0x73, 0x65, 0x72,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x22, 0x54, 0x0a, 0x15, 0x4a, 0x75, 0x70,
	0x69, 0x74, 0x65, 0x72, 0x53, 0x77, 0x61, 0x70, 0x54, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x66, 0x66, 0x69, 0x2e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22,
	0x4c, 0x0a, 0x12, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x69, 0x73, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x75, 0x70, 0x22, 0xcd, 0x02,
	0x0a, 0x10, 0x4a, 0x75, 0x70, 0x69, 0x74, 0x65, 0x72, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x38, 0x0a, 0x0b, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x66, 0x66, 0x69, 0x2e, 0x4a, 0x75,
	0x70, 0x69, 0x74, 0x65, 0x72, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x0b, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x69, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08,
	0x69, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x75, 0x74, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x6f, 0x75, 0x74,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x32,
	0x0a, 0x14, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x68, 0x72,
	0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x14, 0x6f, 0x74,
	0x68, 0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f,
	0x6c, 0x64, 0x12, 0x30, 0x0a, 0x08, 0x73, 0x77, 0x61, 0x70, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x66, 0x66, 0x69, 0x2e, 0x4a, 0x75, 0x70, 0x69, 0x74,
	0x65, 0x72, 0x53, 0x77, 0x61, 0x70, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x08, 0x73, 0x77, 0x61, 0x70,
	0x4d, 0x6f, 0x64, 0x65, 0x12, 0x47, 0x0a, 0x12, 0x70, 0x72, 0x69, 0x63, 0x65, 0x49, 0x6d, 0x70,
	0x61, 0x63, 0x74, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x49, 0x6d, 0x70, 0x61,
	0x63, 0x74, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x52, 0x12, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x49, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x22, 0x89, 0x03,
	0x0a, 0x11, 0x4a, 0x75, 0x70, 0x69, 0x74, 0x65, 0x72, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x21, 0x0a, 0x03, 0x61, 0x6d, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x66, 0x66, 0x69, 0x2e, 0x4a, 0x75, 0x70, 0x69, 0x74, 0x65, 0x72, 0x41, 0x6d,
	0x6d, 0x52, 0x03, 0x61, 0x6d, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x4d,
	0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x70, 0x75, 0x74,
	0x4d, 0x69, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x4d, 0x69,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x4d, 0x69, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x69, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x75, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x09, 0x6f, 0x75, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x47,
	0x0a, 0x12, 0x70, 0x72, 0x69, 0x63, 0x65, 0x49, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x50, 0x65, 0x72,
	0x63, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x49, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x50, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x52, 0x12, 0x70, 0x72, 0x69, 0x63, 0x65, 0x49, 0x6d, 0x70, 0x61, 0x63, 0x74,
	0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x10, 0x6c, 0x69, 0x71, 0x75, 0x69,
	0x64, 0x69, 0x74, 0x79, 0x50, 0x6f, 0x6f, 0x6c, 0x46, 0x65, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x08, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x65, 0x65, 0x52, 0x10, 0x6c, 0x69, 0x71,
	0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x50, 0x6f, 0x6f, 0x6c, 0x46, 0x65, 0x65, 0x12, 0x2a, 0x0a,
	0x0b, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x46, 0x65, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x08, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x65, 0x65, 0x52, 0x0b, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x46, 0x65, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x6e, 0x6f, 0x74,
	0x45, 0x6e, 0x6f, 0x75, 0x67, 0x68, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x6e, 0x6f, 0x74, 0x45, 0x6e, 0x6f, 0x75, 0x67, 0x68,
	0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x22, 0x32, 0x0a, 0x0a, 0x4a, 0x75, 0x70,
	0x69, 0x74, 0x65, 0x72, 0x41, 0x6d, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x2a, 0x36, 0x0a,
	0x0f, 0x4a, 0x75, 0x70, 0x69, 0x74, 0x65, 0x72, 0x53, 0x77, 0x61, 0x70, 0x4d, 0x6f, 0x64, 0x65,
	0x12, 0x10, 0x0a, 0x0c, 0x4a, 0x53, 0x4d, 0x5f, 0x45, 0x58, 0x41, 0x43, 0x54, 0x5f, 0x49, 0x4e,
	0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x4a, 0x53, 0x4d, 0x5f, 0x45, 0x58, 0x41, 0x43, 0x54, 0x5f,
	0x4f, 0x55, 0x54, 0x10, 0x01, 0x32, 0xb4, 0x03, 0x0a, 0x03, 0x46, 0x46, 0x49, 0x12, 0x55, 0x0a,
	0x14, 0x53, 0x6f, 0x6c, 0x61, 0x6e, 0x61, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x1b, 0x2e, 0x66, 0x66, 0x69, 0x2e, 0x53, 0x6f, 0x6c, 0x61,
	0x6e, 0x61, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x1a, 0x1a, 0x2e, 0x66, 0x66, 0x69, 0x2e, 0x53, 0x6f, 0x6c, 0x61, 0x6e, 0x61, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x00,
	0x28, 0x01, 0x30, 0x01, 0x12, 0x4b, 0x0a, 0x0e, 0x4a, 0x75, 0x70, 0x69, 0x74, 0x65, 0x72, 0x49,
	0x73, 0x52, 0x65, 0x61, 0x64, 0x79, 0x12, 0x1a, 0x2e, 0x66, 0x66, 0x69, 0x2e, 0x4a, 0x75, 0x70,
	0x69, 0x74, 0x65, 0x72, 0x49, 0x73, 0x52, 0x65, 0x61, 0x64, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x66, 0x66, 0x69, 0x2e, 0x4a, 0x75, 0x70, 0x69, 0x74, 0x65, 0x72,
	0x49, 0x73, 0x52, 0x65, 0x61, 0x64, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x60, 0x0a, 0x15, 0x4a, 0x75, 0x70, 0x69, 0x74, 0x65, 0x72, 0x50, 0x61, 0x69, 0x72,
	0x54, 0x6f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x21, 0x2e, 0x66, 0x66, 0x69,
	0x2e, 0x4a, 0x75, 0x70, 0x69, 0x74, 0x65, 0x72, 0x50, 0x61, 0x69, 0x72, 0x54, 0x6f, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e,
	0x66, 0x66, 0x69, 0x2e, 0x4a, 0x75, 0x70, 0x69, 0x74, 0x65, 0x72, 0x50, 0x61, 0x69, 0x72, 0x54,
	0x6f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x14, 0x4a, 0x75, 0x70, 0x69, 0x74, 0x65, 0x72, 0x43, 0x6f,
	0x6d, 0x70, 0x75, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x12, 0x20, 0x2e, 0x66, 0x66,
	0x69, 0x2e, 0x4a, 0x75, 0x70, 0x69, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65,
	0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e,
	0x66, 0x66, 0x69, 0x2e, 0x4a, 0x75, 0x70, 0x69, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x75,
	0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x48, 0x0a, 0x0d, 0x4a, 0x75, 0x70, 0x69, 0x74, 0x65, 0x72, 0x53, 0x77, 0x61,
	0x70, 0x54, 0x78, 0x12, 0x19, 0x2e, 0x66, 0x66, 0x69, 0x2e, 0x4a, 0x75, 0x70, 0x69, 0x74, 0x65,
	0x72, 0x53, 0x77, 0x61, 0x70, 0x54, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a,
	0x2e, 0x66, 0x66, 0x69, 0x2e, 0x4a, 0x75, 0x70, 0x69, 0x74, 0x65, 0x72, 0x53, 0x77, 0x61, 0x70,
	0x54, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x39, 0x5a, 0x37,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x6c, 0x6f, 0x58, 0x72,
	0x6f, 0x75, 0x74, 0x65, 0x2d, 0x4c, 0x61, 0x62, 0x73, 0x2f, 0x73, 0x6f, 0x6c, 0x61, 0x6e, 0x61,
	0x2d, 0x74, 0x72, 0x61, 0x64, 0x65, 0x72, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x66, 0x66, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ffi_proto_rawDescOnce sync.Once
	file_ffi_proto_rawDescData = file_ffi_proto_rawDesc
)

func file_ffi_proto_rawDescGZIP() []byte {
	file_ffi_proto_rawDescOnce.Do(func() {
		file_ffi_proto_rawDescData = protoimpl.X.CompressGZIP(file_ffi_proto_rawDescData)
	})
	return file_ffi_proto_rawDescData
}

var file_ffi_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_ffi_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_ffi_proto_goTypes = []interface{}{
	(JupiterSwapMode)(0),                  // 0: ffi.JupiterSwapMode
	(*SolanaAccountsRequest)(nil),         // 1: ffi.SolanaAccountsRequest
	(*SolanaAccountsResponse)(nil),        // 2: ffi.SolanaAccountsResponse
	(*SolanaAccount)(nil),                 // 3: ffi.SolanaAccount
	(*JupiterPairToAccountsRequest)(nil),  // 4: ffi.JupiterPairToAccountsRequest
	(*JupiterPairToAccountsResponse)(nil), // 5: ffi.JupiterPairToAccountsResponse
	(*JupiterIsReadyRequest)(nil),         // 6: ffi.JupiterIsReadyRequest
	(*JupiterIsReadyResponse)(nil),        // 7: ffi.JupiterIsReadyResponse
	(*JupiterComputeRoutesRequest)(nil),   // 8: ffi.JupiterComputeRoutesRequest
	(*JupiterComputeRoutesResponse)(nil),  // 9: ffi.JupiterComputeRoutesResponse
	(*JupiterSwapTxRequest)(nil),          // 10: ffi.JupiterSwapTxRequest
	(*JupiterSwapTxResponse)(nil),         // 11: ffi.JupiterSwapTxResponse
	(*TransactionMessage)(nil),            // 12: ffi.TransactionMessage
	(*JupiterRouteInfo)(nil),              // 13: ffi.JupiterRouteInfo
	(*JupiterMarketInfo)(nil),             // 14: ffi.JupiterMarketInfo
	(*JupiterAmm)(nil),                    // 15: ffi.JupiterAmm
	(*api.PriceImpactPercent)(nil),        // 16: api.PriceImpactPercent
	(*api.Fee)(nil),                       // 17: api.Fee
}
var file_ffi_proto_depIdxs = []int32{
	3,  // 0: ffi.SolanaAccountsResponse.accounts:type_name -> ffi.SolanaAccount
	13, // 1: ffi.JupiterComputeRoutesResponse.routeInfos:type_name -> ffi.JupiterRouteInfo
	14, // 2: ffi.JupiterSwapTxRequest.steps:type_name -> ffi.JupiterMarketInfo
	0,  // 3: ffi.JupiterSwapTxRequest.swapMode:type_name -> ffi.JupiterSwapMode
	16, // 4: ffi.JupiterSwapTxRequest.priceImpactPercent:type_name -> api.PriceImpactPercent
	12, // 5: ffi.JupiterSwapTxResponse.transactions:type_name -> ffi.TransactionMessage
	14, // 6: ffi.JupiterRouteInfo.marketInfos:type_name -> ffi.JupiterMarketInfo
	0,  // 7: ffi.JupiterRouteInfo.swapMode:type_name -> ffi.JupiterSwapMode
	16, // 8: ffi.JupiterRouteInfo.priceImpactPercent:type_name -> api.PriceImpactPercent
	15, // 9: ffi.JupiterMarketInfo.amm:type_name -> ffi.JupiterAmm
	16, // 10: ffi.JupiterMarketInfo.priceImpactPercent:type_name -> api.PriceImpactPercent
	17, // 11: ffi.JupiterMarketInfo.liquidityPoolFee:type_name -> api.Fee
	17, // 12: ffi.JupiterMarketInfo.platformFee:type_name -> api.Fee
	2,  // 13: ffi.FFI.SolanaAccountsStream:input_type -> ffi.SolanaAccountsResponse
	6,  // 14: ffi.FFI.JupiterIsReady:input_type -> ffi.JupiterIsReadyRequest
	4,  // 15: ffi.FFI.JupiterPairToAccounts:input_type -> ffi.JupiterPairToAccountsRequest
	8,  // 16: ffi.FFI.JupiterComputeRoutes:input_type -> ffi.JupiterComputeRoutesRequest
	10, // 17: ffi.FFI.JupiterSwapTx:input_type -> ffi.JupiterSwapTxRequest
	1,  // 18: ffi.FFI.SolanaAccountsStream:output_type -> ffi.SolanaAccountsRequest
	7,  // 19: ffi.FFI.JupiterIsReady:output_type -> ffi.JupiterIsReadyResponse
	5,  // 20: ffi.FFI.JupiterPairToAccounts:output_type -> ffi.JupiterPairToAccountsResponse
	9,  // 21: ffi.FFI.JupiterComputeRoutes:output_type -> ffi.JupiterComputeRoutesResponse
	11, // 22: ffi.FFI.JupiterSwapTx:output_type -> ffi.JupiterSwapTxResponse
	18, // [18:23] is the sub-list for method output_type
	13, // [13:18] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_ffi_proto_init() }
func file_ffi_proto_init() {
	if File_ffi_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ffi_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SolanaAccountsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffi_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SolanaAccountsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffi_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SolanaAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffi_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JupiterPairToAccountsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffi_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JupiterPairToAccountsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffi_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JupiterIsReadyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffi_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JupiterIsReadyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffi_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JupiterComputeRoutesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffi_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JupiterComputeRoutesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffi_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JupiterSwapTxRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffi_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JupiterSwapTxResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffi_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffi_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JupiterRouteInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffi_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JupiterMarketInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffi_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JupiterAmm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ffi_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ffi_proto_goTypes,
		DependencyIndexes: file_ffi_proto_depIdxs,
		EnumInfos:         file_ffi_proto_enumTypes,
		MessageInfos:      file_ffi_proto_msgTypes,
	}.Build()
	File_ffi_proto = out.File
	file_ffi_proto_rawDesc = nil
	file_ffi_proto_goTypes = nil
	file_ffi_proto_depIdxs = nil
}
