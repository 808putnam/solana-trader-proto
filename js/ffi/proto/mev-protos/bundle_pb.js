// source: mev-protos/bundle.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var mev$protos_packet_pb = require('../mev-protos/packet_pb.js');
goog.object.extend(proto, mev$protos_packet_pb);
var mev$protos_shared_pb = require('../mev-protos/shared_pb.js');
goog.object.extend(proto, mev$protos_shared_pb);
goog.exportSymbol('proto.bundle.Accepted', null, global);
goog.exportSymbol('proto.bundle.Bundle', null, global);
goog.exportSymbol('proto.bundle.BundleResult', null, global);
goog.exportSymbol('proto.bundle.BundleResult.ResultCase', null, global);
goog.exportSymbol('proto.bundle.BundleUuid', null, global);
goog.exportSymbol('proto.bundle.Dropped', null, global);
goog.exportSymbol('proto.bundle.DroppedBundle', null, global);
goog.exportSymbol('proto.bundle.DroppedReason', null, global);
goog.exportSymbol('proto.bundle.Finalized', null, global);
goog.exportSymbol('proto.bundle.InternalError', null, global);
goog.exportSymbol('proto.bundle.Processed', null, global);
goog.exportSymbol('proto.bundle.Rejected', null, global);
goog.exportSymbol('proto.bundle.Rejected.ReasonCase', null, global);
goog.exportSymbol('proto.bundle.SimulationFailure', null, global);
goog.exportSymbol('proto.bundle.StateAuctionBidRejected', null, global);
goog.exportSymbol('proto.bundle.WinningBatchBidRejected', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bundle.Bundle = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.bundle.Bundle.repeatedFields_, null);
};
goog.inherits(proto.bundle.Bundle, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bundle.Bundle.displayName = 'proto.bundle.Bundle';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bundle.BundleUuid = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bundle.BundleUuid, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bundle.BundleUuid.displayName = 'proto.bundle.BundleUuid';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bundle.Accepted = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bundle.Accepted, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bundle.Accepted.displayName = 'proto.bundle.Accepted';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bundle.Rejected = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.bundle.Rejected.oneofGroups_);
};
goog.inherits(proto.bundle.Rejected, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bundle.Rejected.displayName = 'proto.bundle.Rejected';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bundle.WinningBatchBidRejected = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bundle.WinningBatchBidRejected, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bundle.WinningBatchBidRejected.displayName = 'proto.bundle.WinningBatchBidRejected';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bundle.StateAuctionBidRejected = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bundle.StateAuctionBidRejected, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bundle.StateAuctionBidRejected.displayName = 'proto.bundle.StateAuctionBidRejected';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bundle.SimulationFailure = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bundle.SimulationFailure, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bundle.SimulationFailure.displayName = 'proto.bundle.SimulationFailure';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bundle.InternalError = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bundle.InternalError, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bundle.InternalError.displayName = 'proto.bundle.InternalError';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bundle.DroppedBundle = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bundle.DroppedBundle, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bundle.DroppedBundle.displayName = 'proto.bundle.DroppedBundle';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bundle.Finalized = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bundle.Finalized, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bundle.Finalized.displayName = 'proto.bundle.Finalized';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bundle.Processed = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bundle.Processed, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bundle.Processed.displayName = 'proto.bundle.Processed';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bundle.Dropped = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bundle.Dropped, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bundle.Dropped.displayName = 'proto.bundle.Dropped';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bundle.BundleResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.bundle.BundleResult.oneofGroups_);
};
goog.inherits(proto.bundle.BundleResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bundle.BundleResult.displayName = 'proto.bundle.BundleResult';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.bundle.Bundle.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bundle.Bundle.prototype.toObject = function(opt_includeInstance) {
  return proto.bundle.Bundle.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bundle.Bundle} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bundle.Bundle.toObject = function(includeInstance, msg) {
  var f, obj = {
    header: (f = msg.getHeader()) && mev$protos_shared_pb.Header.toObject(includeInstance, f),
    packetsList: jspb.Message.toObjectList(msg.getPacketsList(),
    mev$protos_packet_pb.Packet.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bundle.Bundle}
 */
proto.bundle.Bundle.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bundle.Bundle;
  return proto.bundle.Bundle.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bundle.Bundle} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bundle.Bundle}
 */
proto.bundle.Bundle.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new mev$protos_shared_pb.Header;
      reader.readMessage(value,mev$protos_shared_pb.Header.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 3:
      var value = new mev$protos_packet_pb.Packet;
      reader.readMessage(value,mev$protos_packet_pb.Packet.deserializeBinaryFromReader);
      msg.addPackets(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bundle.Bundle.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bundle.Bundle.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bundle.Bundle} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bundle.Bundle.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      mev$protos_shared_pb.Header.serializeBinaryToWriter
    );
  }
  f = message.getPacketsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      mev$protos_packet_pb.Packet.serializeBinaryToWriter
    );
  }
};


/**
 * optional shared.Header header = 2;
 * @return {?proto.shared.Header}
 */
proto.bundle.Bundle.prototype.getHeader = function() {
  return /** @type{?proto.shared.Header} */ (
    jspb.Message.getWrapperField(this, mev$protos_shared_pb.Header, 2));
};


/**
 * @param {?proto.shared.Header|undefined} value
 * @return {!proto.bundle.Bundle} returns this
*/
proto.bundle.Bundle.prototype.setHeader = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bundle.Bundle} returns this
 */
proto.bundle.Bundle.prototype.clearHeader = function() {
  return this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bundle.Bundle.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated packet.Packet packets = 3;
 * @return {!Array<!proto.packet.Packet>}
 */
proto.bundle.Bundle.prototype.getPacketsList = function() {
  return /** @type{!Array<!proto.packet.Packet>} */ (
    jspb.Message.getRepeatedWrapperField(this, mev$protos_packet_pb.Packet, 3));
};


/**
 * @param {!Array<!proto.packet.Packet>} value
 * @return {!proto.bundle.Bundle} returns this
*/
proto.bundle.Bundle.prototype.setPacketsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.packet.Packet=} opt_value
 * @param {number=} opt_index
 * @return {!proto.packet.Packet}
 */
proto.bundle.Bundle.prototype.addPackets = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.packet.Packet, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bundle.Bundle} returns this
 */
proto.bundle.Bundle.prototype.clearPacketsList = function() {
  return this.setPacketsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bundle.BundleUuid.prototype.toObject = function(opt_includeInstance) {
  return proto.bundle.BundleUuid.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bundle.BundleUuid} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bundle.BundleUuid.toObject = function(includeInstance, msg) {
  var f, obj = {
    bundle: (f = msg.getBundle()) && proto.bundle.Bundle.toObject(includeInstance, f),
    uuid: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bundle.BundleUuid}
 */
proto.bundle.BundleUuid.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bundle.BundleUuid;
  return proto.bundle.BundleUuid.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bundle.BundleUuid} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bundle.BundleUuid}
 */
proto.bundle.BundleUuid.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.bundle.Bundle;
      reader.readMessage(value,proto.bundle.Bundle.deserializeBinaryFromReader);
      msg.setBundle(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bundle.BundleUuid.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bundle.BundleUuid.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bundle.BundleUuid} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bundle.BundleUuid.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBundle();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.bundle.Bundle.serializeBinaryToWriter
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional Bundle bundle = 1;
 * @return {?proto.bundle.Bundle}
 */
proto.bundle.BundleUuid.prototype.getBundle = function() {
  return /** @type{?proto.bundle.Bundle} */ (
    jspb.Message.getWrapperField(this, proto.bundle.Bundle, 1));
};


/**
 * @param {?proto.bundle.Bundle|undefined} value
 * @return {!proto.bundle.BundleUuid} returns this
*/
proto.bundle.BundleUuid.prototype.setBundle = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bundle.BundleUuid} returns this
 */
proto.bundle.BundleUuid.prototype.clearBundle = function() {
  return this.setBundle(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bundle.BundleUuid.prototype.hasBundle = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string uuid = 2;
 * @return {string}
 */
proto.bundle.BundleUuid.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.bundle.BundleUuid} returns this
 */
proto.bundle.BundleUuid.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bundle.Accepted.prototype.toObject = function(opt_includeInstance) {
  return proto.bundle.Accepted.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bundle.Accepted} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bundle.Accepted.toObject = function(includeInstance, msg) {
  var f, obj = {
    slot: jspb.Message.getFieldWithDefault(msg, 1, 0),
    validatorIdentity: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bundle.Accepted}
 */
proto.bundle.Accepted.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bundle.Accepted;
  return proto.bundle.Accepted.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bundle.Accepted} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bundle.Accepted}
 */
proto.bundle.Accepted.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSlot(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setValidatorIdentity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bundle.Accepted.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bundle.Accepted.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bundle.Accepted} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bundle.Accepted.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSlot();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getValidatorIdentity();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional uint64 slot = 1;
 * @return {number}
 */
proto.bundle.Accepted.prototype.getSlot = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.bundle.Accepted} returns this
 */
proto.bundle.Accepted.prototype.setSlot = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string validator_identity = 2;
 * @return {string}
 */
proto.bundle.Accepted.prototype.getValidatorIdentity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.bundle.Accepted} returns this
 */
proto.bundle.Accepted.prototype.setValidatorIdentity = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.bundle.Rejected.oneofGroups_ = [[1,2,3,4,5]];

/**
 * @enum {number}
 */
proto.bundle.Rejected.ReasonCase = {
  REASON_NOT_SET: 0,
  STATE_AUCTION_BID_REJECTED: 1,
  WINNING_BATCH_BID_REJECTED: 2,
  SIMULATION_FAILURE: 3,
  INTERNAL_ERROR: 4,
  DROPPED_BUNDLE: 5
};

/**
 * @return {proto.bundle.Rejected.ReasonCase}
 */
proto.bundle.Rejected.prototype.getReasonCase = function() {
  return /** @type {proto.bundle.Rejected.ReasonCase} */(jspb.Message.computeOneofCase(this, proto.bundle.Rejected.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bundle.Rejected.prototype.toObject = function(opt_includeInstance) {
  return proto.bundle.Rejected.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bundle.Rejected} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bundle.Rejected.toObject = function(includeInstance, msg) {
  var f, obj = {
    stateAuctionBidRejected: (f = msg.getStateAuctionBidRejected()) && proto.bundle.StateAuctionBidRejected.toObject(includeInstance, f),
    winningBatchBidRejected: (f = msg.getWinningBatchBidRejected()) && proto.bundle.WinningBatchBidRejected.toObject(includeInstance, f),
    simulationFailure: (f = msg.getSimulationFailure()) && proto.bundle.SimulationFailure.toObject(includeInstance, f),
    internalError: (f = msg.getInternalError()) && proto.bundle.InternalError.toObject(includeInstance, f),
    droppedBundle: (f = msg.getDroppedBundle()) && proto.bundle.DroppedBundle.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bundle.Rejected}
 */
proto.bundle.Rejected.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bundle.Rejected;
  return proto.bundle.Rejected.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bundle.Rejected} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bundle.Rejected}
 */
proto.bundle.Rejected.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.bundle.StateAuctionBidRejected;
      reader.readMessage(value,proto.bundle.StateAuctionBidRejected.deserializeBinaryFromReader);
      msg.setStateAuctionBidRejected(value);
      break;
    case 2:
      var value = new proto.bundle.WinningBatchBidRejected;
      reader.readMessage(value,proto.bundle.WinningBatchBidRejected.deserializeBinaryFromReader);
      msg.setWinningBatchBidRejected(value);
      break;
    case 3:
      var value = new proto.bundle.SimulationFailure;
      reader.readMessage(value,proto.bundle.SimulationFailure.deserializeBinaryFromReader);
      msg.setSimulationFailure(value);
      break;
    case 4:
      var value = new proto.bundle.InternalError;
      reader.readMessage(value,proto.bundle.InternalError.deserializeBinaryFromReader);
      msg.setInternalError(value);
      break;
    case 5:
      var value = new proto.bundle.DroppedBundle;
      reader.readMessage(value,proto.bundle.DroppedBundle.deserializeBinaryFromReader);
      msg.setDroppedBundle(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bundle.Rejected.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bundle.Rejected.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bundle.Rejected} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bundle.Rejected.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStateAuctionBidRejected();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.bundle.StateAuctionBidRejected.serializeBinaryToWriter
    );
  }
  f = message.getWinningBatchBidRejected();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.bundle.WinningBatchBidRejected.serializeBinaryToWriter
    );
  }
  f = message.getSimulationFailure();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.bundle.SimulationFailure.serializeBinaryToWriter
    );
  }
  f = message.getInternalError();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.bundle.InternalError.serializeBinaryToWriter
    );
  }
  f = message.getDroppedBundle();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.bundle.DroppedBundle.serializeBinaryToWriter
    );
  }
};


/**
 * optional StateAuctionBidRejected state_auction_bid_rejected = 1;
 * @return {?proto.bundle.StateAuctionBidRejected}
 */
proto.bundle.Rejected.prototype.getStateAuctionBidRejected = function() {
  return /** @type{?proto.bundle.StateAuctionBidRejected} */ (
    jspb.Message.getWrapperField(this, proto.bundle.StateAuctionBidRejected, 1));
};


/**
 * @param {?proto.bundle.StateAuctionBidRejected|undefined} value
 * @return {!proto.bundle.Rejected} returns this
*/
proto.bundle.Rejected.prototype.setStateAuctionBidRejected = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.bundle.Rejected.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bundle.Rejected} returns this
 */
proto.bundle.Rejected.prototype.clearStateAuctionBidRejected = function() {
  return this.setStateAuctionBidRejected(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bundle.Rejected.prototype.hasStateAuctionBidRejected = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional WinningBatchBidRejected winning_batch_bid_rejected = 2;
 * @return {?proto.bundle.WinningBatchBidRejected}
 */
proto.bundle.Rejected.prototype.getWinningBatchBidRejected = function() {
  return /** @type{?proto.bundle.WinningBatchBidRejected} */ (
    jspb.Message.getWrapperField(this, proto.bundle.WinningBatchBidRejected, 2));
};


/**
 * @param {?proto.bundle.WinningBatchBidRejected|undefined} value
 * @return {!proto.bundle.Rejected} returns this
*/
proto.bundle.Rejected.prototype.setWinningBatchBidRejected = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.bundle.Rejected.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bundle.Rejected} returns this
 */
proto.bundle.Rejected.prototype.clearWinningBatchBidRejected = function() {
  return this.setWinningBatchBidRejected(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bundle.Rejected.prototype.hasWinningBatchBidRejected = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional SimulationFailure simulation_failure = 3;
 * @return {?proto.bundle.SimulationFailure}
 */
proto.bundle.Rejected.prototype.getSimulationFailure = function() {
  return /** @type{?proto.bundle.SimulationFailure} */ (
    jspb.Message.getWrapperField(this, proto.bundle.SimulationFailure, 3));
};


/**
 * @param {?proto.bundle.SimulationFailure|undefined} value
 * @return {!proto.bundle.Rejected} returns this
*/
proto.bundle.Rejected.prototype.setSimulationFailure = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.bundle.Rejected.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bundle.Rejected} returns this
 */
proto.bundle.Rejected.prototype.clearSimulationFailure = function() {
  return this.setSimulationFailure(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bundle.Rejected.prototype.hasSimulationFailure = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional InternalError internal_error = 4;
 * @return {?proto.bundle.InternalError}
 */
proto.bundle.Rejected.prototype.getInternalError = function() {
  return /** @type{?proto.bundle.InternalError} */ (
    jspb.Message.getWrapperField(this, proto.bundle.InternalError, 4));
};


/**
 * @param {?proto.bundle.InternalError|undefined} value
 * @return {!proto.bundle.Rejected} returns this
*/
proto.bundle.Rejected.prototype.setInternalError = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.bundle.Rejected.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bundle.Rejected} returns this
 */
proto.bundle.Rejected.prototype.clearInternalError = function() {
  return this.setInternalError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bundle.Rejected.prototype.hasInternalError = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional DroppedBundle dropped_bundle = 5;
 * @return {?proto.bundle.DroppedBundle}
 */
proto.bundle.Rejected.prototype.getDroppedBundle = function() {
  return /** @type{?proto.bundle.DroppedBundle} */ (
    jspb.Message.getWrapperField(this, proto.bundle.DroppedBundle, 5));
};


/**
 * @param {?proto.bundle.DroppedBundle|undefined} value
 * @return {!proto.bundle.Rejected} returns this
*/
proto.bundle.Rejected.prototype.setDroppedBundle = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.bundle.Rejected.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bundle.Rejected} returns this
 */
proto.bundle.Rejected.prototype.clearDroppedBundle = function() {
  return this.setDroppedBundle(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bundle.Rejected.prototype.hasDroppedBundle = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bundle.WinningBatchBidRejected.prototype.toObject = function(opt_includeInstance) {
  return proto.bundle.WinningBatchBidRejected.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bundle.WinningBatchBidRejected} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bundle.WinningBatchBidRejected.toObject = function(includeInstance, msg) {
  var f, obj = {
    auctionId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    simulatedBidLamports: jspb.Message.getFieldWithDefault(msg, 2, 0),
    msg: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bundle.WinningBatchBidRejected}
 */
proto.bundle.WinningBatchBidRejected.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bundle.WinningBatchBidRejected;
  return proto.bundle.WinningBatchBidRejected.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bundle.WinningBatchBidRejected} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bundle.WinningBatchBidRejected}
 */
proto.bundle.WinningBatchBidRejected.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAuctionId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSimulatedBidLamports(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMsg(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bundle.WinningBatchBidRejected.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bundle.WinningBatchBidRejected.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bundle.WinningBatchBidRejected} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bundle.WinningBatchBidRejected.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuctionId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSimulatedBidLamports();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string auction_id = 1;
 * @return {string}
 */
proto.bundle.WinningBatchBidRejected.prototype.getAuctionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bundle.WinningBatchBidRejected} returns this
 */
proto.bundle.WinningBatchBidRejected.prototype.setAuctionId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 simulated_bid_lamports = 2;
 * @return {number}
 */
proto.bundle.WinningBatchBidRejected.prototype.getSimulatedBidLamports = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.bundle.WinningBatchBidRejected} returns this
 */
proto.bundle.WinningBatchBidRejected.prototype.setSimulatedBidLamports = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string msg = 3;
 * @return {string}
 */
proto.bundle.WinningBatchBidRejected.prototype.getMsg = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.bundle.WinningBatchBidRejected} returns this
 */
proto.bundle.WinningBatchBidRejected.prototype.setMsg = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.bundle.WinningBatchBidRejected} returns this
 */
proto.bundle.WinningBatchBidRejected.prototype.clearMsg = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bundle.WinningBatchBidRejected.prototype.hasMsg = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bundle.StateAuctionBidRejected.prototype.toObject = function(opt_includeInstance) {
  return proto.bundle.StateAuctionBidRejected.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bundle.StateAuctionBidRejected} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bundle.StateAuctionBidRejected.toObject = function(includeInstance, msg) {
  var f, obj = {
    auctionId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    simulatedBidLamports: jspb.Message.getFieldWithDefault(msg, 2, 0),
    msg: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bundle.StateAuctionBidRejected}
 */
proto.bundle.StateAuctionBidRejected.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bundle.StateAuctionBidRejected;
  return proto.bundle.StateAuctionBidRejected.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bundle.StateAuctionBidRejected} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bundle.StateAuctionBidRejected}
 */
proto.bundle.StateAuctionBidRejected.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAuctionId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSimulatedBidLamports(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMsg(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bundle.StateAuctionBidRejected.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bundle.StateAuctionBidRejected.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bundle.StateAuctionBidRejected} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bundle.StateAuctionBidRejected.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuctionId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSimulatedBidLamports();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string auction_id = 1;
 * @return {string}
 */
proto.bundle.StateAuctionBidRejected.prototype.getAuctionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bundle.StateAuctionBidRejected} returns this
 */
proto.bundle.StateAuctionBidRejected.prototype.setAuctionId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 simulated_bid_lamports = 2;
 * @return {number}
 */
proto.bundle.StateAuctionBidRejected.prototype.getSimulatedBidLamports = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.bundle.StateAuctionBidRejected} returns this
 */
proto.bundle.StateAuctionBidRejected.prototype.setSimulatedBidLamports = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string msg = 3;
 * @return {string}
 */
proto.bundle.StateAuctionBidRejected.prototype.getMsg = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.bundle.StateAuctionBidRejected} returns this
 */
proto.bundle.StateAuctionBidRejected.prototype.setMsg = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.bundle.StateAuctionBidRejected} returns this
 */
proto.bundle.StateAuctionBidRejected.prototype.clearMsg = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bundle.StateAuctionBidRejected.prototype.hasMsg = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bundle.SimulationFailure.prototype.toObject = function(opt_includeInstance) {
  return proto.bundle.SimulationFailure.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bundle.SimulationFailure} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bundle.SimulationFailure.toObject = function(includeInstance, msg) {
  var f, obj = {
    txSignature: jspb.Message.getFieldWithDefault(msg, 1, ""),
    msg: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bundle.SimulationFailure}
 */
proto.bundle.SimulationFailure.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bundle.SimulationFailure;
  return proto.bundle.SimulationFailure.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bundle.SimulationFailure} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bundle.SimulationFailure}
 */
proto.bundle.SimulationFailure.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTxSignature(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMsg(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bundle.SimulationFailure.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bundle.SimulationFailure.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bundle.SimulationFailure} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bundle.SimulationFailure.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTxSignature();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string tx_signature = 1;
 * @return {string}
 */
proto.bundle.SimulationFailure.prototype.getTxSignature = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bundle.SimulationFailure} returns this
 */
proto.bundle.SimulationFailure.prototype.setTxSignature = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string msg = 2;
 * @return {string}
 */
proto.bundle.SimulationFailure.prototype.getMsg = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.bundle.SimulationFailure} returns this
 */
proto.bundle.SimulationFailure.prototype.setMsg = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.bundle.SimulationFailure} returns this
 */
proto.bundle.SimulationFailure.prototype.clearMsg = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bundle.SimulationFailure.prototype.hasMsg = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bundle.InternalError.prototype.toObject = function(opt_includeInstance) {
  return proto.bundle.InternalError.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bundle.InternalError} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bundle.InternalError.toObject = function(includeInstance, msg) {
  var f, obj = {
    msg: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bundle.InternalError}
 */
proto.bundle.InternalError.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bundle.InternalError;
  return proto.bundle.InternalError.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bundle.InternalError} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bundle.InternalError}
 */
proto.bundle.InternalError.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMsg(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bundle.InternalError.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bundle.InternalError.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bundle.InternalError} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bundle.InternalError.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMsg();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string msg = 1;
 * @return {string}
 */
proto.bundle.InternalError.prototype.getMsg = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bundle.InternalError} returns this
 */
proto.bundle.InternalError.prototype.setMsg = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bundle.DroppedBundle.prototype.toObject = function(opt_includeInstance) {
  return proto.bundle.DroppedBundle.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bundle.DroppedBundle} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bundle.DroppedBundle.toObject = function(includeInstance, msg) {
  var f, obj = {
    msg: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bundle.DroppedBundle}
 */
proto.bundle.DroppedBundle.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bundle.DroppedBundle;
  return proto.bundle.DroppedBundle.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bundle.DroppedBundle} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bundle.DroppedBundle}
 */
proto.bundle.DroppedBundle.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMsg(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bundle.DroppedBundle.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bundle.DroppedBundle.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bundle.DroppedBundle} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bundle.DroppedBundle.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMsg();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string msg = 1;
 * @return {string}
 */
proto.bundle.DroppedBundle.prototype.getMsg = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bundle.DroppedBundle} returns this
 */
proto.bundle.DroppedBundle.prototype.setMsg = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bundle.Finalized.prototype.toObject = function(opt_includeInstance) {
  return proto.bundle.Finalized.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bundle.Finalized} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bundle.Finalized.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bundle.Finalized}
 */
proto.bundle.Finalized.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bundle.Finalized;
  return proto.bundle.Finalized.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bundle.Finalized} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bundle.Finalized}
 */
proto.bundle.Finalized.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bundle.Finalized.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bundle.Finalized.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bundle.Finalized} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bundle.Finalized.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bundle.Processed.prototype.toObject = function(opt_includeInstance) {
  return proto.bundle.Processed.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bundle.Processed} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bundle.Processed.toObject = function(includeInstance, msg) {
  var f, obj = {
    validatorIdentity: jspb.Message.getFieldWithDefault(msg, 1, ""),
    slot: jspb.Message.getFieldWithDefault(msg, 2, 0),
    bundleIndex: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bundle.Processed}
 */
proto.bundle.Processed.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bundle.Processed;
  return proto.bundle.Processed.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bundle.Processed} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bundle.Processed}
 */
proto.bundle.Processed.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setValidatorIdentity(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSlot(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBundleIndex(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bundle.Processed.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bundle.Processed.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bundle.Processed} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bundle.Processed.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValidatorIdentity();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSlot();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getBundleIndex();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
};


/**
 * optional string validator_identity = 1;
 * @return {string}
 */
proto.bundle.Processed.prototype.getValidatorIdentity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bundle.Processed} returns this
 */
proto.bundle.Processed.prototype.setValidatorIdentity = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 slot = 2;
 * @return {number}
 */
proto.bundle.Processed.prototype.getSlot = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.bundle.Processed} returns this
 */
proto.bundle.Processed.prototype.setSlot = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 bundle_index = 3;
 * @return {number}
 */
proto.bundle.Processed.prototype.getBundleIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.bundle.Processed} returns this
 */
proto.bundle.Processed.prototype.setBundleIndex = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bundle.Dropped.prototype.toObject = function(opt_includeInstance) {
  return proto.bundle.Dropped.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bundle.Dropped} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bundle.Dropped.toObject = function(includeInstance, msg) {
  var f, obj = {
    reason: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bundle.Dropped}
 */
proto.bundle.Dropped.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bundle.Dropped;
  return proto.bundle.Dropped.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bundle.Dropped} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bundle.Dropped}
 */
proto.bundle.Dropped.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.bundle.DroppedReason} */ (reader.readEnum());
      msg.setReason(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bundle.Dropped.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bundle.Dropped.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bundle.Dropped} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bundle.Dropped.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReason();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * optional DroppedReason reason = 1;
 * @return {!proto.bundle.DroppedReason}
 */
proto.bundle.Dropped.prototype.getReason = function() {
  return /** @type {!proto.bundle.DroppedReason} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.bundle.DroppedReason} value
 * @return {!proto.bundle.Dropped} returns this
 */
proto.bundle.Dropped.prototype.setReason = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.bundle.BundleResult.oneofGroups_ = [[2,3,4,5,6]];

/**
 * @enum {number}
 */
proto.bundle.BundleResult.ResultCase = {
  RESULT_NOT_SET: 0,
  ACCEPTED: 2,
  REJECTED: 3,
  FINALIZED: 4,
  PROCESSED: 5,
  DROPPED: 6
};

/**
 * @return {proto.bundle.BundleResult.ResultCase}
 */
proto.bundle.BundleResult.prototype.getResultCase = function() {
  return /** @type {proto.bundle.BundleResult.ResultCase} */(jspb.Message.computeOneofCase(this, proto.bundle.BundleResult.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bundle.BundleResult.prototype.toObject = function(opt_includeInstance) {
  return proto.bundle.BundleResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bundle.BundleResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bundle.BundleResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    bundleId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    accepted: (f = msg.getAccepted()) && proto.bundle.Accepted.toObject(includeInstance, f),
    rejected: (f = msg.getRejected()) && proto.bundle.Rejected.toObject(includeInstance, f),
    finalized: (f = msg.getFinalized()) && proto.bundle.Finalized.toObject(includeInstance, f),
    processed: (f = msg.getProcessed()) && proto.bundle.Processed.toObject(includeInstance, f),
    dropped: (f = msg.getDropped()) && proto.bundle.Dropped.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bundle.BundleResult}
 */
proto.bundle.BundleResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bundle.BundleResult;
  return proto.bundle.BundleResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bundle.BundleResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bundle.BundleResult}
 */
proto.bundle.BundleResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBundleId(value);
      break;
    case 2:
      var value = new proto.bundle.Accepted;
      reader.readMessage(value,proto.bundle.Accepted.deserializeBinaryFromReader);
      msg.setAccepted(value);
      break;
    case 3:
      var value = new proto.bundle.Rejected;
      reader.readMessage(value,proto.bundle.Rejected.deserializeBinaryFromReader);
      msg.setRejected(value);
      break;
    case 4:
      var value = new proto.bundle.Finalized;
      reader.readMessage(value,proto.bundle.Finalized.deserializeBinaryFromReader);
      msg.setFinalized(value);
      break;
    case 5:
      var value = new proto.bundle.Processed;
      reader.readMessage(value,proto.bundle.Processed.deserializeBinaryFromReader);
      msg.setProcessed(value);
      break;
    case 6:
      var value = new proto.bundle.Dropped;
      reader.readMessage(value,proto.bundle.Dropped.deserializeBinaryFromReader);
      msg.setDropped(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bundle.BundleResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bundle.BundleResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bundle.BundleResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bundle.BundleResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBundleId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAccepted();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.bundle.Accepted.serializeBinaryToWriter
    );
  }
  f = message.getRejected();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.bundle.Rejected.serializeBinaryToWriter
    );
  }
  f = message.getFinalized();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.bundle.Finalized.serializeBinaryToWriter
    );
  }
  f = message.getProcessed();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.bundle.Processed.serializeBinaryToWriter
    );
  }
  f = message.getDropped();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.bundle.Dropped.serializeBinaryToWriter
    );
  }
};


/**
 * optional string bundle_id = 1;
 * @return {string}
 */
proto.bundle.BundleResult.prototype.getBundleId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bundle.BundleResult} returns this
 */
proto.bundle.BundleResult.prototype.setBundleId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Accepted accepted = 2;
 * @return {?proto.bundle.Accepted}
 */
proto.bundle.BundleResult.prototype.getAccepted = function() {
  return /** @type{?proto.bundle.Accepted} */ (
    jspb.Message.getWrapperField(this, proto.bundle.Accepted, 2));
};


/**
 * @param {?proto.bundle.Accepted|undefined} value
 * @return {!proto.bundle.BundleResult} returns this
*/
proto.bundle.BundleResult.prototype.setAccepted = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.bundle.BundleResult.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bundle.BundleResult} returns this
 */
proto.bundle.BundleResult.prototype.clearAccepted = function() {
  return this.setAccepted(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bundle.BundleResult.prototype.hasAccepted = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Rejected rejected = 3;
 * @return {?proto.bundle.Rejected}
 */
proto.bundle.BundleResult.prototype.getRejected = function() {
  return /** @type{?proto.bundle.Rejected} */ (
    jspb.Message.getWrapperField(this, proto.bundle.Rejected, 3));
};


/**
 * @param {?proto.bundle.Rejected|undefined} value
 * @return {!proto.bundle.BundleResult} returns this
*/
proto.bundle.BundleResult.prototype.setRejected = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.bundle.BundleResult.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bundle.BundleResult} returns this
 */
proto.bundle.BundleResult.prototype.clearRejected = function() {
  return this.setRejected(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bundle.BundleResult.prototype.hasRejected = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Finalized finalized = 4;
 * @return {?proto.bundle.Finalized}
 */
proto.bundle.BundleResult.prototype.getFinalized = function() {
  return /** @type{?proto.bundle.Finalized} */ (
    jspb.Message.getWrapperField(this, proto.bundle.Finalized, 4));
};


/**
 * @param {?proto.bundle.Finalized|undefined} value
 * @return {!proto.bundle.BundleResult} returns this
*/
proto.bundle.BundleResult.prototype.setFinalized = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.bundle.BundleResult.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bundle.BundleResult} returns this
 */
proto.bundle.BundleResult.prototype.clearFinalized = function() {
  return this.setFinalized(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bundle.BundleResult.prototype.hasFinalized = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Processed processed = 5;
 * @return {?proto.bundle.Processed}
 */
proto.bundle.BundleResult.prototype.getProcessed = function() {
  return /** @type{?proto.bundle.Processed} */ (
    jspb.Message.getWrapperField(this, proto.bundle.Processed, 5));
};


/**
 * @param {?proto.bundle.Processed|undefined} value
 * @return {!proto.bundle.BundleResult} returns this
*/
proto.bundle.BundleResult.prototype.setProcessed = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.bundle.BundleResult.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bundle.BundleResult} returns this
 */
proto.bundle.BundleResult.prototype.clearProcessed = function() {
  return this.setProcessed(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bundle.BundleResult.prototype.hasProcessed = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Dropped dropped = 6;
 * @return {?proto.bundle.Dropped}
 */
proto.bundle.BundleResult.prototype.getDropped = function() {
  return /** @type{?proto.bundle.Dropped} */ (
    jspb.Message.getWrapperField(this, proto.bundle.Dropped, 6));
};


/**
 * @param {?proto.bundle.Dropped|undefined} value
 * @return {!proto.bundle.BundleResult} returns this
*/
proto.bundle.BundleResult.prototype.setDropped = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.bundle.BundleResult.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bundle.BundleResult} returns this
 */
proto.bundle.BundleResult.prototype.clearDropped = function() {
  return this.setDropped(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bundle.BundleResult.prototype.hasDropped = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * @enum {number}
 */
proto.bundle.DroppedReason = {
  BLOCKHASHEXPIRED: 0,
  PARTIALLYPROCESSED: 1,
  NOTFINALIZED: 2
};

goog.object.extend(exports, proto.bundle);
