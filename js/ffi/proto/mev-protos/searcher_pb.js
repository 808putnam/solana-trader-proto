// source: mev-protos/searcher.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var mev$protos_bundle_pb = require('../mev-protos/bundle_pb.js');
goog.object.extend(proto, mev$protos_bundle_pb);
var mev$protos_packet_pb = require('../mev-protos/packet_pb.js');
goog.object.extend(proto, mev$protos_packet_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.searcher.ConnectedLeadersRegionedRequest', null, global);
goog.exportSymbol('proto.searcher.ConnectedLeadersRegionedResponse', null, global);
goog.exportSymbol('proto.searcher.ConnectedLeadersRequest', null, global);
goog.exportSymbol('proto.searcher.ConnectedLeadersResponse', null, global);
goog.exportSymbol('proto.searcher.GetRegionsRequest', null, global);
goog.exportSymbol('proto.searcher.GetRegionsResponse', null, global);
goog.exportSymbol('proto.searcher.GetTipAccountsRequest', null, global);
goog.exportSymbol('proto.searcher.GetTipAccountsResponse', null, global);
goog.exportSymbol('proto.searcher.MempoolSubscription', null, global);
goog.exportSymbol('proto.searcher.MempoolSubscription.MsgCase', null, global);
goog.exportSymbol('proto.searcher.NextScheduledLeaderRequest', null, global);
goog.exportSymbol('proto.searcher.NextScheduledLeaderResponse', null, global);
goog.exportSymbol('proto.searcher.PendingTxNotification', null, global);
goog.exportSymbol('proto.searcher.ProgramSubscriptionV0', null, global);
goog.exportSymbol('proto.searcher.SendBundleRequest', null, global);
goog.exportSymbol('proto.searcher.SendBundleResponse', null, global);
goog.exportSymbol('proto.searcher.SlotList', null, global);
goog.exportSymbol('proto.searcher.SubscribeBundleResultsRequest', null, global);
goog.exportSymbol('proto.searcher.WriteLockedAccountSubscriptionV0', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.searcher.SlotList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.searcher.SlotList.repeatedFields_, null);
};
goog.inherits(proto.searcher.SlotList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.searcher.SlotList.displayName = 'proto.searcher.SlotList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.searcher.ConnectedLeadersResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.searcher.ConnectedLeadersResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.searcher.ConnectedLeadersResponse.displayName = 'proto.searcher.ConnectedLeadersResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.searcher.SendBundleRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.searcher.SendBundleRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.searcher.SendBundleRequest.displayName = 'proto.searcher.SendBundleRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.searcher.SendBundleResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.searcher.SendBundleResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.searcher.SendBundleResponse.displayName = 'proto.searcher.SendBundleResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.searcher.ProgramSubscriptionV0 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.searcher.ProgramSubscriptionV0.repeatedFields_, null);
};
goog.inherits(proto.searcher.ProgramSubscriptionV0, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.searcher.ProgramSubscriptionV0.displayName = 'proto.searcher.ProgramSubscriptionV0';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.searcher.WriteLockedAccountSubscriptionV0 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.searcher.WriteLockedAccountSubscriptionV0.repeatedFields_, null);
};
goog.inherits(proto.searcher.WriteLockedAccountSubscriptionV0, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.searcher.WriteLockedAccountSubscriptionV0.displayName = 'proto.searcher.WriteLockedAccountSubscriptionV0';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.searcher.MempoolSubscription = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.searcher.MempoolSubscription.repeatedFields_, proto.searcher.MempoolSubscription.oneofGroups_);
};
goog.inherits(proto.searcher.MempoolSubscription, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.searcher.MempoolSubscription.displayName = 'proto.searcher.MempoolSubscription';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.searcher.PendingTxNotification = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.searcher.PendingTxNotification.repeatedFields_, null);
};
goog.inherits(proto.searcher.PendingTxNotification, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.searcher.PendingTxNotification.displayName = 'proto.searcher.PendingTxNotification';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.searcher.NextScheduledLeaderRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.searcher.NextScheduledLeaderRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.searcher.NextScheduledLeaderRequest.displayName = 'proto.searcher.NextScheduledLeaderRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.searcher.NextScheduledLeaderResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.searcher.NextScheduledLeaderResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.searcher.NextScheduledLeaderResponse.displayName = 'proto.searcher.NextScheduledLeaderResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.searcher.ConnectedLeadersRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.searcher.ConnectedLeadersRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.searcher.ConnectedLeadersRequest.displayName = 'proto.searcher.ConnectedLeadersRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.searcher.ConnectedLeadersRegionedRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.searcher.ConnectedLeadersRegionedRequest.repeatedFields_, null);
};
goog.inherits(proto.searcher.ConnectedLeadersRegionedRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.searcher.ConnectedLeadersRegionedRequest.displayName = 'proto.searcher.ConnectedLeadersRegionedRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.searcher.ConnectedLeadersRegionedResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.searcher.ConnectedLeadersRegionedResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.searcher.ConnectedLeadersRegionedResponse.displayName = 'proto.searcher.ConnectedLeadersRegionedResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.searcher.GetTipAccountsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.searcher.GetTipAccountsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.searcher.GetTipAccountsRequest.displayName = 'proto.searcher.GetTipAccountsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.searcher.GetTipAccountsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.searcher.GetTipAccountsResponse.repeatedFields_, null);
};
goog.inherits(proto.searcher.GetTipAccountsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.searcher.GetTipAccountsResponse.displayName = 'proto.searcher.GetTipAccountsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.searcher.SubscribeBundleResultsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.searcher.SubscribeBundleResultsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.searcher.SubscribeBundleResultsRequest.displayName = 'proto.searcher.SubscribeBundleResultsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.searcher.GetRegionsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.searcher.GetRegionsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.searcher.GetRegionsRequest.displayName = 'proto.searcher.GetRegionsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.searcher.GetRegionsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.searcher.GetRegionsResponse.repeatedFields_, null);
};
goog.inherits(proto.searcher.GetRegionsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.searcher.GetRegionsResponse.displayName = 'proto.searcher.GetRegionsResponse';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.searcher.SlotList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.searcher.SlotList.prototype.toObject = function(opt_includeInstance) {
  return proto.searcher.SlotList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.searcher.SlotList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.searcher.SlotList.toObject = function(includeInstance, msg) {
  var f, obj = {
    slotsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.searcher.SlotList}
 */
proto.searcher.SlotList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.searcher.SlotList;
  return proto.searcher.SlotList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.searcher.SlotList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.searcher.SlotList}
 */
proto.searcher.SlotList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint64() : [reader.readUint64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addSlots(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.searcher.SlotList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.searcher.SlotList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.searcher.SlotList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.searcher.SlotList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSlotsList();
  if (f.length > 0) {
    writer.writePackedUint64(
      1,
      f
    );
  }
};


/**
 * repeated uint64 slots = 1;
 * @return {!Array<number>}
 */
proto.searcher.SlotList.prototype.getSlotsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.searcher.SlotList} returns this
 */
proto.searcher.SlotList.prototype.setSlotsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.searcher.SlotList} returns this
 */
proto.searcher.SlotList.prototype.addSlots = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.searcher.SlotList} returns this
 */
proto.searcher.SlotList.prototype.clearSlotsList = function() {
  return this.setSlotsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.searcher.ConnectedLeadersResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.searcher.ConnectedLeadersResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.searcher.ConnectedLeadersResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.searcher.ConnectedLeadersResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    connectedValidatorsMap: (f = msg.getConnectedValidatorsMap()) ? f.toObject(includeInstance, proto.searcher.SlotList.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.searcher.ConnectedLeadersResponse}
 */
proto.searcher.ConnectedLeadersResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.searcher.ConnectedLeadersResponse;
  return proto.searcher.ConnectedLeadersResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.searcher.ConnectedLeadersResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.searcher.ConnectedLeadersResponse}
 */
proto.searcher.ConnectedLeadersResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getConnectedValidatorsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.searcher.SlotList.deserializeBinaryFromReader, "", new proto.searcher.SlotList());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.searcher.ConnectedLeadersResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.searcher.ConnectedLeadersResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.searcher.ConnectedLeadersResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.searcher.ConnectedLeadersResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConnectedValidatorsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.searcher.SlotList.serializeBinaryToWriter);
  }
};


/**
 * map<string, SlotList> connected_validators = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.searcher.SlotList>}
 */
proto.searcher.ConnectedLeadersResponse.prototype.getConnectedValidatorsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.searcher.SlotList>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      proto.searcher.SlotList));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.searcher.ConnectedLeadersResponse} returns this
 */
proto.searcher.ConnectedLeadersResponse.prototype.clearConnectedValidatorsMap = function() {
  this.getConnectedValidatorsMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.searcher.SendBundleRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.searcher.SendBundleRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.searcher.SendBundleRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.searcher.SendBundleRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    bundle: (f = msg.getBundle()) && mev$protos_bundle_pb.Bundle.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.searcher.SendBundleRequest}
 */
proto.searcher.SendBundleRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.searcher.SendBundleRequest;
  return proto.searcher.SendBundleRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.searcher.SendBundleRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.searcher.SendBundleRequest}
 */
proto.searcher.SendBundleRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new mev$protos_bundle_pb.Bundle;
      reader.readMessage(value,mev$protos_bundle_pb.Bundle.deserializeBinaryFromReader);
      msg.setBundle(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.searcher.SendBundleRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.searcher.SendBundleRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.searcher.SendBundleRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.searcher.SendBundleRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBundle();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      mev$protos_bundle_pb.Bundle.serializeBinaryToWriter
    );
  }
};


/**
 * optional bundle.Bundle bundle = 1;
 * @return {?proto.bundle.Bundle}
 */
proto.searcher.SendBundleRequest.prototype.getBundle = function() {
  return /** @type{?proto.bundle.Bundle} */ (
    jspb.Message.getWrapperField(this, mev$protos_bundle_pb.Bundle, 1));
};


/**
 * @param {?proto.bundle.Bundle|undefined} value
 * @return {!proto.searcher.SendBundleRequest} returns this
*/
proto.searcher.SendBundleRequest.prototype.setBundle = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.searcher.SendBundleRequest} returns this
 */
proto.searcher.SendBundleRequest.prototype.clearBundle = function() {
  return this.setBundle(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.searcher.SendBundleRequest.prototype.hasBundle = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.searcher.SendBundleResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.searcher.SendBundleResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.searcher.SendBundleResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.searcher.SendBundleResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    uuid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.searcher.SendBundleResponse}
 */
proto.searcher.SendBundleResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.searcher.SendBundleResponse;
  return proto.searcher.SendBundleResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.searcher.SendBundleResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.searcher.SendBundleResponse}
 */
proto.searcher.SendBundleResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.searcher.SendBundleResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.searcher.SendBundleResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.searcher.SendBundleResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.searcher.SendBundleResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string uuid = 1;
 * @return {string}
 */
proto.searcher.SendBundleResponse.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.searcher.SendBundleResponse} returns this
 */
proto.searcher.SendBundleResponse.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.searcher.ProgramSubscriptionV0.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.searcher.ProgramSubscriptionV0.prototype.toObject = function(opt_includeInstance) {
  return proto.searcher.ProgramSubscriptionV0.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.searcher.ProgramSubscriptionV0} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.searcher.ProgramSubscriptionV0.toObject = function(includeInstance, msg) {
  var f, obj = {
    programsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.searcher.ProgramSubscriptionV0}
 */
proto.searcher.ProgramSubscriptionV0.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.searcher.ProgramSubscriptionV0;
  return proto.searcher.ProgramSubscriptionV0.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.searcher.ProgramSubscriptionV0} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.searcher.ProgramSubscriptionV0}
 */
proto.searcher.ProgramSubscriptionV0.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addPrograms(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.searcher.ProgramSubscriptionV0.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.searcher.ProgramSubscriptionV0.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.searcher.ProgramSubscriptionV0} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.searcher.ProgramSubscriptionV0.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProgramsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string programs = 1;
 * @return {!Array<string>}
 */
proto.searcher.ProgramSubscriptionV0.prototype.getProgramsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.searcher.ProgramSubscriptionV0} returns this
 */
proto.searcher.ProgramSubscriptionV0.prototype.setProgramsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.searcher.ProgramSubscriptionV0} returns this
 */
proto.searcher.ProgramSubscriptionV0.prototype.addPrograms = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.searcher.ProgramSubscriptionV0} returns this
 */
proto.searcher.ProgramSubscriptionV0.prototype.clearProgramsList = function() {
  return this.setProgramsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.searcher.WriteLockedAccountSubscriptionV0.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.searcher.WriteLockedAccountSubscriptionV0.prototype.toObject = function(opt_includeInstance) {
  return proto.searcher.WriteLockedAccountSubscriptionV0.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.searcher.WriteLockedAccountSubscriptionV0} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.searcher.WriteLockedAccountSubscriptionV0.toObject = function(includeInstance, msg) {
  var f, obj = {
    accountsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.searcher.WriteLockedAccountSubscriptionV0}
 */
proto.searcher.WriteLockedAccountSubscriptionV0.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.searcher.WriteLockedAccountSubscriptionV0;
  return proto.searcher.WriteLockedAccountSubscriptionV0.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.searcher.WriteLockedAccountSubscriptionV0} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.searcher.WriteLockedAccountSubscriptionV0}
 */
proto.searcher.WriteLockedAccountSubscriptionV0.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addAccounts(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.searcher.WriteLockedAccountSubscriptionV0.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.searcher.WriteLockedAccountSubscriptionV0.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.searcher.WriteLockedAccountSubscriptionV0} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.searcher.WriteLockedAccountSubscriptionV0.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccountsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string accounts = 1;
 * @return {!Array<string>}
 */
proto.searcher.WriteLockedAccountSubscriptionV0.prototype.getAccountsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.searcher.WriteLockedAccountSubscriptionV0} returns this
 */
proto.searcher.WriteLockedAccountSubscriptionV0.prototype.setAccountsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.searcher.WriteLockedAccountSubscriptionV0} returns this
 */
proto.searcher.WriteLockedAccountSubscriptionV0.prototype.addAccounts = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.searcher.WriteLockedAccountSubscriptionV0} returns this
 */
proto.searcher.WriteLockedAccountSubscriptionV0.prototype.clearAccountsList = function() {
  return this.setAccountsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.searcher.MempoolSubscription.repeatedFields_ = [10];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.searcher.MempoolSubscription.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.searcher.MempoolSubscription.MsgCase = {
  MSG_NOT_SET: 0,
  PROGRAM_V0_SUB: 1,
  WLA_V0_SUB: 2
};

/**
 * @return {proto.searcher.MempoolSubscription.MsgCase}
 */
proto.searcher.MempoolSubscription.prototype.getMsgCase = function() {
  return /** @type {proto.searcher.MempoolSubscription.MsgCase} */(jspb.Message.computeOneofCase(this, proto.searcher.MempoolSubscription.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.searcher.MempoolSubscription.prototype.toObject = function(opt_includeInstance) {
  return proto.searcher.MempoolSubscription.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.searcher.MempoolSubscription} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.searcher.MempoolSubscription.toObject = function(includeInstance, msg) {
  var f, obj = {
    programV0Sub: (f = msg.getProgramV0Sub()) && proto.searcher.ProgramSubscriptionV0.toObject(includeInstance, f),
    wlaV0Sub: (f = msg.getWlaV0Sub()) && proto.searcher.WriteLockedAccountSubscriptionV0.toObject(includeInstance, f),
    regionsList: (f = jspb.Message.getRepeatedField(msg, 10)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.searcher.MempoolSubscription}
 */
proto.searcher.MempoolSubscription.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.searcher.MempoolSubscription;
  return proto.searcher.MempoolSubscription.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.searcher.MempoolSubscription} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.searcher.MempoolSubscription}
 */
proto.searcher.MempoolSubscription.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.searcher.ProgramSubscriptionV0;
      reader.readMessage(value,proto.searcher.ProgramSubscriptionV0.deserializeBinaryFromReader);
      msg.setProgramV0Sub(value);
      break;
    case 2:
      var value = new proto.searcher.WriteLockedAccountSubscriptionV0;
      reader.readMessage(value,proto.searcher.WriteLockedAccountSubscriptionV0.deserializeBinaryFromReader);
      msg.setWlaV0Sub(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.addRegions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.searcher.MempoolSubscription.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.searcher.MempoolSubscription.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.searcher.MempoolSubscription} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.searcher.MempoolSubscription.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProgramV0Sub();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.searcher.ProgramSubscriptionV0.serializeBinaryToWriter
    );
  }
  f = message.getWlaV0Sub();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.searcher.WriteLockedAccountSubscriptionV0.serializeBinaryToWriter
    );
  }
  f = message.getRegionsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      10,
      f
    );
  }
};


/**
 * optional ProgramSubscriptionV0 program_v0_sub = 1;
 * @return {?proto.searcher.ProgramSubscriptionV0}
 */
proto.searcher.MempoolSubscription.prototype.getProgramV0Sub = function() {
  return /** @type{?proto.searcher.ProgramSubscriptionV0} */ (
    jspb.Message.getWrapperField(this, proto.searcher.ProgramSubscriptionV0, 1));
};


/**
 * @param {?proto.searcher.ProgramSubscriptionV0|undefined} value
 * @return {!proto.searcher.MempoolSubscription} returns this
*/
proto.searcher.MempoolSubscription.prototype.setProgramV0Sub = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.searcher.MempoolSubscription.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.searcher.MempoolSubscription} returns this
 */
proto.searcher.MempoolSubscription.prototype.clearProgramV0Sub = function() {
  return this.setProgramV0Sub(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.searcher.MempoolSubscription.prototype.hasProgramV0Sub = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional WriteLockedAccountSubscriptionV0 wla_v0_sub = 2;
 * @return {?proto.searcher.WriteLockedAccountSubscriptionV0}
 */
proto.searcher.MempoolSubscription.prototype.getWlaV0Sub = function() {
  return /** @type{?proto.searcher.WriteLockedAccountSubscriptionV0} */ (
    jspb.Message.getWrapperField(this, proto.searcher.WriteLockedAccountSubscriptionV0, 2));
};


/**
 * @param {?proto.searcher.WriteLockedAccountSubscriptionV0|undefined} value
 * @return {!proto.searcher.MempoolSubscription} returns this
*/
proto.searcher.MempoolSubscription.prototype.setWlaV0Sub = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.searcher.MempoolSubscription.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.searcher.MempoolSubscription} returns this
 */
proto.searcher.MempoolSubscription.prototype.clearWlaV0Sub = function() {
  return this.setWlaV0Sub(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.searcher.MempoolSubscription.prototype.hasWlaV0Sub = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated string regions = 10;
 * @return {!Array<string>}
 */
proto.searcher.MempoolSubscription.prototype.getRegionsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 10));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.searcher.MempoolSubscription} returns this
 */
proto.searcher.MempoolSubscription.prototype.setRegionsList = function(value) {
  return jspb.Message.setField(this, 10, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.searcher.MempoolSubscription} returns this
 */
proto.searcher.MempoolSubscription.prototype.addRegions = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 10, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.searcher.MempoolSubscription} returns this
 */
proto.searcher.MempoolSubscription.prototype.clearRegionsList = function() {
  return this.setRegionsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.searcher.PendingTxNotification.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.searcher.PendingTxNotification.prototype.toObject = function(opt_includeInstance) {
  return proto.searcher.PendingTxNotification.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.searcher.PendingTxNotification} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.searcher.PendingTxNotification.toObject = function(includeInstance, msg) {
  var f, obj = {
    serverSideTs: (f = msg.getServerSideTs()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    expirationTime: (f = msg.getExpirationTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    transactionsList: jspb.Message.toObjectList(msg.getTransactionsList(),
    mev$protos_packet_pb.Packet.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.searcher.PendingTxNotification}
 */
proto.searcher.PendingTxNotification.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.searcher.PendingTxNotification;
  return proto.searcher.PendingTxNotification.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.searcher.PendingTxNotification} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.searcher.PendingTxNotification}
 */
proto.searcher.PendingTxNotification.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setServerSideTs(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setExpirationTime(value);
      break;
    case 3:
      var value = new mev$protos_packet_pb.Packet;
      reader.readMessage(value,mev$protos_packet_pb.Packet.deserializeBinaryFromReader);
      msg.addTransactions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.searcher.PendingTxNotification.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.searcher.PendingTxNotification.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.searcher.PendingTxNotification} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.searcher.PendingTxNotification.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getServerSideTs();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getExpirationTime();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getTransactionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      mev$protos_packet_pb.Packet.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Timestamp server_side_ts = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.searcher.PendingTxNotification.prototype.getServerSideTs = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.searcher.PendingTxNotification} returns this
*/
proto.searcher.PendingTxNotification.prototype.setServerSideTs = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.searcher.PendingTxNotification} returns this
 */
proto.searcher.PendingTxNotification.prototype.clearServerSideTs = function() {
  return this.setServerSideTs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.searcher.PendingTxNotification.prototype.hasServerSideTs = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Timestamp expiration_time = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.searcher.PendingTxNotification.prototype.getExpirationTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.searcher.PendingTxNotification} returns this
*/
proto.searcher.PendingTxNotification.prototype.setExpirationTime = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.searcher.PendingTxNotification} returns this
 */
proto.searcher.PendingTxNotification.prototype.clearExpirationTime = function() {
  return this.setExpirationTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.searcher.PendingTxNotification.prototype.hasExpirationTime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated packet.Packet transactions = 3;
 * @return {!Array<!proto.packet.Packet>}
 */
proto.searcher.PendingTxNotification.prototype.getTransactionsList = function() {
  return /** @type{!Array<!proto.packet.Packet>} */ (
    jspb.Message.getRepeatedWrapperField(this, mev$protos_packet_pb.Packet, 3));
};


/**
 * @param {!Array<!proto.packet.Packet>} value
 * @return {!proto.searcher.PendingTxNotification} returns this
*/
proto.searcher.PendingTxNotification.prototype.setTransactionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.packet.Packet=} opt_value
 * @param {number=} opt_index
 * @return {!proto.packet.Packet}
 */
proto.searcher.PendingTxNotification.prototype.addTransactions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.packet.Packet, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.searcher.PendingTxNotification} returns this
 */
proto.searcher.PendingTxNotification.prototype.clearTransactionsList = function() {
  return this.setTransactionsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.searcher.NextScheduledLeaderRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.searcher.NextScheduledLeaderRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.searcher.NextScheduledLeaderRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.searcher.NextScheduledLeaderRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.searcher.NextScheduledLeaderRequest}
 */
proto.searcher.NextScheduledLeaderRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.searcher.NextScheduledLeaderRequest;
  return proto.searcher.NextScheduledLeaderRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.searcher.NextScheduledLeaderRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.searcher.NextScheduledLeaderRequest}
 */
proto.searcher.NextScheduledLeaderRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.searcher.NextScheduledLeaderRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.searcher.NextScheduledLeaderRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.searcher.NextScheduledLeaderRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.searcher.NextScheduledLeaderRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.searcher.NextScheduledLeaderResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.searcher.NextScheduledLeaderResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.searcher.NextScheduledLeaderResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.searcher.NextScheduledLeaderResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    currentSlot: jspb.Message.getFieldWithDefault(msg, 1, 0),
    nextLeaderSlot: jspb.Message.getFieldWithDefault(msg, 2, 0),
    nextLeaderIdentity: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.searcher.NextScheduledLeaderResponse}
 */
proto.searcher.NextScheduledLeaderResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.searcher.NextScheduledLeaderResponse;
  return proto.searcher.NextScheduledLeaderResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.searcher.NextScheduledLeaderResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.searcher.NextScheduledLeaderResponse}
 */
proto.searcher.NextScheduledLeaderResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCurrentSlot(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setNextLeaderSlot(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setNextLeaderIdentity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.searcher.NextScheduledLeaderResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.searcher.NextScheduledLeaderResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.searcher.NextScheduledLeaderResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.searcher.NextScheduledLeaderResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCurrentSlot();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getNextLeaderSlot();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getNextLeaderIdentity();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional uint64 current_slot = 1;
 * @return {number}
 */
proto.searcher.NextScheduledLeaderResponse.prototype.getCurrentSlot = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.searcher.NextScheduledLeaderResponse} returns this
 */
proto.searcher.NextScheduledLeaderResponse.prototype.setCurrentSlot = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 next_leader_slot = 2;
 * @return {number}
 */
proto.searcher.NextScheduledLeaderResponse.prototype.getNextLeaderSlot = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.searcher.NextScheduledLeaderResponse} returns this
 */
proto.searcher.NextScheduledLeaderResponse.prototype.setNextLeaderSlot = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string next_leader_identity = 3;
 * @return {string}
 */
proto.searcher.NextScheduledLeaderResponse.prototype.getNextLeaderIdentity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.searcher.NextScheduledLeaderResponse} returns this
 */
proto.searcher.NextScheduledLeaderResponse.prototype.setNextLeaderIdentity = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.searcher.ConnectedLeadersRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.searcher.ConnectedLeadersRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.searcher.ConnectedLeadersRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.searcher.ConnectedLeadersRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.searcher.ConnectedLeadersRequest}
 */
proto.searcher.ConnectedLeadersRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.searcher.ConnectedLeadersRequest;
  return proto.searcher.ConnectedLeadersRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.searcher.ConnectedLeadersRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.searcher.ConnectedLeadersRequest}
 */
proto.searcher.ConnectedLeadersRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.searcher.ConnectedLeadersRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.searcher.ConnectedLeadersRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.searcher.ConnectedLeadersRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.searcher.ConnectedLeadersRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.searcher.ConnectedLeadersRegionedRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.searcher.ConnectedLeadersRegionedRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.searcher.ConnectedLeadersRegionedRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.searcher.ConnectedLeadersRegionedRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.searcher.ConnectedLeadersRegionedRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    regionsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.searcher.ConnectedLeadersRegionedRequest}
 */
proto.searcher.ConnectedLeadersRegionedRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.searcher.ConnectedLeadersRegionedRequest;
  return proto.searcher.ConnectedLeadersRegionedRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.searcher.ConnectedLeadersRegionedRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.searcher.ConnectedLeadersRegionedRequest}
 */
proto.searcher.ConnectedLeadersRegionedRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addRegions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.searcher.ConnectedLeadersRegionedRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.searcher.ConnectedLeadersRegionedRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.searcher.ConnectedLeadersRegionedRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.searcher.ConnectedLeadersRegionedRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRegionsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string regions = 1;
 * @return {!Array<string>}
 */
proto.searcher.ConnectedLeadersRegionedRequest.prototype.getRegionsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.searcher.ConnectedLeadersRegionedRequest} returns this
 */
proto.searcher.ConnectedLeadersRegionedRequest.prototype.setRegionsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.searcher.ConnectedLeadersRegionedRequest} returns this
 */
proto.searcher.ConnectedLeadersRegionedRequest.prototype.addRegions = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.searcher.ConnectedLeadersRegionedRequest} returns this
 */
proto.searcher.ConnectedLeadersRegionedRequest.prototype.clearRegionsList = function() {
  return this.setRegionsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.searcher.ConnectedLeadersRegionedResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.searcher.ConnectedLeadersRegionedResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.searcher.ConnectedLeadersRegionedResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.searcher.ConnectedLeadersRegionedResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    connectedValidatorsMap: (f = msg.getConnectedValidatorsMap()) ? f.toObject(includeInstance, proto.searcher.ConnectedLeadersResponse.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.searcher.ConnectedLeadersRegionedResponse}
 */
proto.searcher.ConnectedLeadersRegionedResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.searcher.ConnectedLeadersRegionedResponse;
  return proto.searcher.ConnectedLeadersRegionedResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.searcher.ConnectedLeadersRegionedResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.searcher.ConnectedLeadersRegionedResponse}
 */
proto.searcher.ConnectedLeadersRegionedResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getConnectedValidatorsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.searcher.ConnectedLeadersResponse.deserializeBinaryFromReader, "", new proto.searcher.ConnectedLeadersResponse());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.searcher.ConnectedLeadersRegionedResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.searcher.ConnectedLeadersRegionedResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.searcher.ConnectedLeadersRegionedResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.searcher.ConnectedLeadersRegionedResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConnectedValidatorsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.searcher.ConnectedLeadersResponse.serializeBinaryToWriter);
  }
};


/**
 * map<string, ConnectedLeadersResponse> connected_validators = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.searcher.ConnectedLeadersResponse>}
 */
proto.searcher.ConnectedLeadersRegionedResponse.prototype.getConnectedValidatorsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.searcher.ConnectedLeadersResponse>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      proto.searcher.ConnectedLeadersResponse));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.searcher.ConnectedLeadersRegionedResponse} returns this
 */
proto.searcher.ConnectedLeadersRegionedResponse.prototype.clearConnectedValidatorsMap = function() {
  this.getConnectedValidatorsMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.searcher.GetTipAccountsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.searcher.GetTipAccountsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.searcher.GetTipAccountsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.searcher.GetTipAccountsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.searcher.GetTipAccountsRequest}
 */
proto.searcher.GetTipAccountsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.searcher.GetTipAccountsRequest;
  return proto.searcher.GetTipAccountsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.searcher.GetTipAccountsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.searcher.GetTipAccountsRequest}
 */
proto.searcher.GetTipAccountsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.searcher.GetTipAccountsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.searcher.GetTipAccountsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.searcher.GetTipAccountsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.searcher.GetTipAccountsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.searcher.GetTipAccountsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.searcher.GetTipAccountsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.searcher.GetTipAccountsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.searcher.GetTipAccountsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.searcher.GetTipAccountsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    accountsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.searcher.GetTipAccountsResponse}
 */
proto.searcher.GetTipAccountsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.searcher.GetTipAccountsResponse;
  return proto.searcher.GetTipAccountsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.searcher.GetTipAccountsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.searcher.GetTipAccountsResponse}
 */
proto.searcher.GetTipAccountsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addAccounts(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.searcher.GetTipAccountsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.searcher.GetTipAccountsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.searcher.GetTipAccountsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.searcher.GetTipAccountsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccountsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string accounts = 1;
 * @return {!Array<string>}
 */
proto.searcher.GetTipAccountsResponse.prototype.getAccountsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.searcher.GetTipAccountsResponse} returns this
 */
proto.searcher.GetTipAccountsResponse.prototype.setAccountsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.searcher.GetTipAccountsResponse} returns this
 */
proto.searcher.GetTipAccountsResponse.prototype.addAccounts = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.searcher.GetTipAccountsResponse} returns this
 */
proto.searcher.GetTipAccountsResponse.prototype.clearAccountsList = function() {
  return this.setAccountsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.searcher.SubscribeBundleResultsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.searcher.SubscribeBundleResultsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.searcher.SubscribeBundleResultsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.searcher.SubscribeBundleResultsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.searcher.SubscribeBundleResultsRequest}
 */
proto.searcher.SubscribeBundleResultsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.searcher.SubscribeBundleResultsRequest;
  return proto.searcher.SubscribeBundleResultsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.searcher.SubscribeBundleResultsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.searcher.SubscribeBundleResultsRequest}
 */
proto.searcher.SubscribeBundleResultsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.searcher.SubscribeBundleResultsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.searcher.SubscribeBundleResultsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.searcher.SubscribeBundleResultsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.searcher.SubscribeBundleResultsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.searcher.GetRegionsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.searcher.GetRegionsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.searcher.GetRegionsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.searcher.GetRegionsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.searcher.GetRegionsRequest}
 */
proto.searcher.GetRegionsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.searcher.GetRegionsRequest;
  return proto.searcher.GetRegionsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.searcher.GetRegionsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.searcher.GetRegionsRequest}
 */
proto.searcher.GetRegionsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.searcher.GetRegionsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.searcher.GetRegionsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.searcher.GetRegionsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.searcher.GetRegionsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.searcher.GetRegionsResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.searcher.GetRegionsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.searcher.GetRegionsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.searcher.GetRegionsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.searcher.GetRegionsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    currentRegion: jspb.Message.getFieldWithDefault(msg, 1, ""),
    availableRegionsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.searcher.GetRegionsResponse}
 */
proto.searcher.GetRegionsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.searcher.GetRegionsResponse;
  return proto.searcher.GetRegionsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.searcher.GetRegionsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.searcher.GetRegionsResponse}
 */
proto.searcher.GetRegionsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrentRegion(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addAvailableRegions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.searcher.GetRegionsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.searcher.GetRegionsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.searcher.GetRegionsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.searcher.GetRegionsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCurrentRegion();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAvailableRegionsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * optional string current_region = 1;
 * @return {string}
 */
proto.searcher.GetRegionsResponse.prototype.getCurrentRegion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.searcher.GetRegionsResponse} returns this
 */
proto.searcher.GetRegionsResponse.prototype.setCurrentRegion = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string available_regions = 2;
 * @return {!Array<string>}
 */
proto.searcher.GetRegionsResponse.prototype.getAvailableRegionsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.searcher.GetRegionsResponse} returns this
 */
proto.searcher.GetRegionsResponse.prototype.setAvailableRegionsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.searcher.GetRegionsResponse} returns this
 */
proto.searcher.GetRegionsResponse.prototype.addAvailableRegions = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.searcher.GetRegionsResponse} returns this
 */
proto.searcher.GetRegionsResponse.prototype.clearAvailableRegionsList = function() {
  return this.setAvailableRegionsList([]);
};


goog.object.extend(exports, proto.searcher);
